{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\snmed\\\\Desktop\\\\guuru\\\\guuru2\\\\Guuru_main\\\\frontend\\\\src\\\\components\\\\utils\\\\LinearLabel\\\\LinearLabel.jsx\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\n\nfunction LinearProgressWithLabel(props) {\n  return /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      width: '100%',\n      mr: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(LinearProgress, Object.assign({\n    variant: \"determinate\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }))));\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\r\n   * The value of the progress indicator for the determinate and buffer variants.\r\n   * Value between 0 and 100.\r\n   */\n  value: PropTypes.number.isRequired\n};\nexport default function LinearWithValueLabel(data) {\n  const [progress, setProgress] = React.useState(10);\n  const start = data.value.start;\n  const end = data.value.end;\n  const now = data.value.now;\n  const progress1 = (now - end) / (start - end) * 100;\n  console.log(start);\n  console.log(end);\n\n  function loro() {\n    for (let i = 0; i <= 4; i++) {\n      console.log('hola');\n    }\n  }\n\n  loro();\n  React.useEffect(() => {\n    //set progress bar with the value of now beeing start the 100% and end the 0%\n    setProgress(progress1);\n  }, [progress1]);\n  return /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(LinearProgressWithLabel, {\n    value: progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/snmed/Desktop/guuru/guuru2/Guuru_main/frontend/src/components/utils/LinearLabel/LinearLabel.jsx"],"names":["React","PropTypes","LinearProgress","Typography","Box","LinearProgressWithLabel","props","display","alignItems","width","mr","propTypes","value","number","isRequired","LinearWithValueLabel","data","progress","setProgress","useState","start","end","now","progress1","console","log","loro","i","useEffect"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;;AAEA,SAASC,uBAAT,CAAiCC,KAAjC,EAAwC;AACtC,sBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE;AAAEC,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,UAAU,EAAE;AAA/B,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE;AAAEC,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,EAAE,EAAE;AAArB,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAgB,IAAA,OAAO,EAAC;AAAxB,KAA0CJ,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF,CADF;AAQD;;AAEDD,uBAAuB,CAACM,SAAxB,GAAoC;AAClC;;;;AAIAC,EAAAA,KAAK,EAAEX,SAAS,CAACY,MAAV,CAAiBC;AALU,CAApC;AAQA,eAAe,SAASC,oBAAT,CAA8BC,IAA9B,EAAoC;AACjD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BlB,KAAK,CAACmB,QAAN,CAAe,EAAf,CAAhC;AAEA,QAAMC,KAAK,GAAGJ,IAAI,CAACJ,KAAL,CAAWQ,KAAzB;AACA,QAAMC,GAAG,GAAGL,IAAI,CAACJ,KAAL,CAAWS,GAAvB;AACA,QAAMC,GAAG,GAAGN,IAAI,CAACJ,KAAL,CAAWU,GAAvB;AAEA,QAAMC,SAAS,GAAI,CAACD,GAAG,GAAGD,GAAP,KAAeD,KAAK,GAAGC,GAAvB,CAAD,GAAgC,GAAlD;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;;AAEA,WAASK,IAAT,GAAe;AACb,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,IAAI,CAApB,EAAuBA,CAAC,EAAxB,EAA2B;AACzBH,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACH;AAAC;;AAGFC,EAAAA,IAAI;AAEJ1B,EAAAA,KAAK,CAAC4B,SAAN,CAAgB,MAAM;AACpB;AACAV,IAAAA,WAAW,CAACK,SAAD,CAAX;AACD,GAHD,EAGG,CAACA,SAAD,CAHH;AAMA,sBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE;AAAEd,MAAAA,KAAK,EAAE;AAAT,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,uBAAD;AAAyB,IAAA,KAAK,EAAEQ,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD","sourcesContent":["import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\n\r\nfunction LinearProgressWithLabel(props) {\r\n  return (\r\n    <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n      <Box sx={{ width: '100%', mr: 1 }}>\r\n        <LinearProgress variant=\"determinate\" {...props} />\r\n      </Box>\r\n      \r\n    </Box>\r\n  );\r\n}\r\n\r\nLinearProgressWithLabel.propTypes = {\r\n  /**\r\n   * The value of the progress indicator for the determinate and buffer variants.\r\n   * Value between 0 and 100.\r\n   */\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default function LinearWithValueLabel(data) {\r\n  const [progress, setProgress] = React.useState(10);\r\n  \r\n  const start = data.value.start;\r\n  const end = data.value.end;\r\n  const now = data.value.now;\r\n  \r\n  const progress1 = ((now - end) / (start - end)) * 100 ;\r\n  console.log(start);\r\n  console.log(end);\r\n\r\n  function loro(){\r\n    for(let i = 0; i <= 4; i++){\r\n      console.log('hola');\r\n  }}\r\n\r\n\r\n  loro();\r\n  \r\n  React.useEffect(() => {\r\n    //set progress bar with the value of now beeing start the 100% and end the 0%\r\n    setProgress(progress1);\r\n  }, [progress1]);\r\n\r\n\r\n  return (\r\n    <Box sx={{ width: '100%' }}>\r\n      <LinearProgressWithLabel value={progress} />\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}