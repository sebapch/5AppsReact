{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\snmed\\\\Desktop\\\\guuru\\\\guuru2\\\\Guuru_main\\\\frontend\\\\src\\\\components\\\\pages\\\\Vaults\\\\VaultsSum.jsx\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport UserContext from \"../../../context/userContext\";\n\nconst VaultsSum = () => {\n  var _userData$user, _userData$user2;\n\n  const [cryptos, setCryptos] = useState([]);\n  const {\n    userData,\n    setUserData\n  } = useContext(UserContext);\n  const [sumVaults, setSumVaults] = useState(0);\n  let total = 0;\n  const uservaults = (_userData$user = userData.user) === null || _userData$user === void 0 ? void 0 : _userData$user.vaults;\n\n  const getSumOfFundsInUSD = () => {\n    axios.get(\"https://min-api.cryptocompare.com/data/pricemulti?fsyms=BTC,ETH,ADA,BNB,Cake,LAND,BSW,&tsyms=USD\").then(res => {\n      const cryptos = res.data;\n      setCryptos(cryptos);\n    });\n  };\n\n  useEffect(() => {\n    getSumOfFundsInUSD();\n  }, []); //get all the coins from the vaults and save\n\n  useEffect(() => {\n    if (uservaults) {\n      uservaults.map((vault, index) => {\n        vault === null || vault === void 0 ? void 0 : vault.coins.map((coin, index) => {\n          total += coin.quantity;\n          setSumVaults(total);\n        });\n        /* total += vault.funds\r\n        setUserVaults(total) */\n      });\n    }\n  }, [uservaults]);\n  console.log(cryptos);\n  console.log(userData);\n  console.log(sumVaults);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cryptos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, Object.keys(cryptos).map(key => /*#__PURE__*/React.createElement(\"div\", {\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, key), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"\\xA0\", cryptos[key].USD)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vaultsSUM\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, (_userData$user2 = userData.user) === null || _userData$user2 === void 0 ? void 0 : _userData$user2.vaults.map((vault, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"fondos : \", vault.funds), vault === null || vault === void 0 ? void 0 : vault.coins.map((coin, index) => {\n    var _cryptos$coin$coin, _cryptos$coin$coin2;\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, coin.coin), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, \"\\xA0\", coin.quantity), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, coin.coin !== 'USDT' && coin.coin !== 'cEuro' && ((_cryptos$coin$coin = cryptos[coin.coin]) === null || _cryptos$coin$coin === void 0 ? void 0 : _cryptos$coin$coin.USD) * coin.quantity), coin.coin !== 'USDT' && coin.coin !== 'cEuro' ? total += ((_cryptos$coin$coin2 = cryptos[coin.coin]) === null || _cryptos$coin$coin2 === void 0 ? void 0 : _cryptos$coin$coin2.USD) * coin.quantity : 'return igual');\n  })))));\n};\n\nexport default VaultsSum;","map":{"version":3,"sources":["C:/Users/snmed/Desktop/guuru/guuru2/Guuru_main/frontend/src/components/pages/Vaults/VaultsSum.jsx"],"names":["React","useState","useEffect","useContext","axios","UserContext","VaultsSum","cryptos","setCryptos","userData","setUserData","sumVaults","setSumVaults","total","uservaults","user","vaults","getSumOfFundsInUSD","get","then","res","data","map","vault","index","coins","coin","quantity","console","log","Object","keys","key","USD","funds"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport UserContext from \"../../../context/userContext\";\r\n\r\nconst VaultsSum = () => {\r\n  const [cryptos, setCryptos] = useState([]);\r\n  const { userData, setUserData } = useContext(UserContext);\r\n  const [sumVaults, setSumVaults] = useState(0);\r\n    let total = 0;\r\n    const uservaults = userData.user?.vaults\r\n\r\n\r\n  const getSumOfFundsInUSD = () => {\r\n    axios\r\n      .get(\r\n        \"https://min-api.cryptocompare.com/data/pricemulti?fsyms=BTC,ETH,ADA,BNB,Cake,LAND,BSW,&tsyms=USD\"\r\n      )\r\n      .then((res) => {\r\n        const cryptos = res.data;\r\n        setCryptos(cryptos);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getSumOfFundsInUSD();\r\n  }, []);\r\n\r\n  //get all the coins from the vaults and save\r\n  useEffect(() => {\r\n    if (uservaults) {\r\n      uservaults.map((vault, index) => {\r\n          vault?.coins.map((coin, index) => {\r\n            total += coin.quantity\r\n            setSumVaults(total)\r\n      })\r\n        /* total += vault.funds\r\n        setUserVaults(total) */\r\n      }\r\n      )\r\n    }\r\n  }, [uservaults])\r\n\r\n  console.log(cryptos);\r\n  console.log(userData);\r\n  console.log(sumVaults);\r\n  return (\r\n    <>\r\n      <div className=\"cryptos\">\r\n        {Object.keys(cryptos).map((key) => (\r\n          <div key={key}>\r\n            <span>{key}</span>\r\n            <span>&nbsp;{cryptos[key].USD}</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"vaultsSUM\">\r\n        {userData.user?.vaults.map((vault, index) => (\r\n          <div key={index}>\r\n            <span>fondos : {vault.funds}</span>\r\n            {vault?.coins.map((coin, index) => (\r\n                \r\n              <div key={index}>\r\n                <span>{coin.coin}</span>\r\n                <span>&nbsp;{coin.quantity}</span>\r\n                {/* compare coin.coin with cryptos and check if the same value */}\r\n                \r\n                <h3>{coin.coin !== 'USDT' && coin.coin !== 'cEuro' && cryptos[coin.coin]?.USD * coin.quantity}</h3>\r\n                \r\n                    {\r\n                (coin.coin !== 'USDT' && coin.coin !== 'cEuro') ? total +=  cryptos[coin.coin]?.USD * coin.quantity : 'return igual'\r\n                }\r\n               \r\n                \r\n                    \r\n                \r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VaultsSum;\r\n"]},"metadata":{},"sourceType":"module"}