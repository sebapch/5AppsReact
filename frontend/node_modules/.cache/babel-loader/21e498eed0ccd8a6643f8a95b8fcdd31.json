{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Natalio-PC\\\\Desktop\\\\Guuru\\\\frontend\\\\src\\\\components\\\\auth\\\\ProtectedRoute.js\";\nimport React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nfunction ProtectedRoute(_ref) {\n  let {\n    component: Component,\n    ...rest\n  } = _ref;\n  let autenticado = localStorage.getItem(\"isAuthenticated\");\n  console.log(autenticado);\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => {\n      if (autenticado) {\n        console.log('hola');\n        return /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 20\n          }\n        }));\n      } else {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: {\n            pathname: \"/\",\n            state: {\n              from: props.location\n            }\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 15\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default ProtectedRoute;","map":{"version":3,"sources":["C:/Users/Natalio-PC/Desktop/Guuru/frontend/src/components/auth/ProtectedRoute.js"],"names":["React","Redirect","Route","ProtectedRoute","component","Component","rest","autenticado","localStorage","getItem","console","log","props","pathname","state","from","location"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;;AAEA,SAASC,cAAT,OACe;AAAA,MADS;AAAGC,IAAAA,SAAS,EAAEC,SAAd;AACpB,OAAGC;AADiB,GACT;AAEf,MAAIC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAlB;AACEC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;AAGE,sBACI,oBAAC,KAAD,oBACID,IADJ;AAEA,IAAA,MAAM,EAAEM,KAAK,IAAI;AACf,UAAIL,WAAJ,EAAiB;AACfG,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,4BAAO,oBAAC,SAAD,oBAAeC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,OAHD,MAGO;AACL,4BACE,oBAAC,QAAD;AACE,UAAA,EAAE,EAAE;AACFC,YAAAA,QAAQ,EAAE,GADR;AAEFC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAEH,KAAK,CAACI;AADP;AAFL,WADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;AACF,KAlBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAsBD;;AAEH,eAAeb,cAAf","sourcesContent":["import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nfunction ProtectedRoute({  component: Component,\r\n    ...rest }) {\r\n\r\nlet autenticado = localStorage.getItem(\"isAuthenticated\");\r\n  console.log(autenticado);\r\n\r\n\r\n    return (\r\n        <Route\r\n        {...rest}\r\n        render={props => {\r\n          if (autenticado) {\r\n            console.log('hola')\r\n            return <Component {...props} />;\r\n          } else {\r\n            return (\r\n              <Redirect\r\n                to={{\r\n                  pathname: \"/\",\r\n                  state: {\r\n                    from: props.location\r\n                  }\r\n                }}\r\n              />\r\n            );\r\n          }\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\nexport default ProtectedRoute;\r\n\r\n "]},"metadata":{},"sourceType":"module"}