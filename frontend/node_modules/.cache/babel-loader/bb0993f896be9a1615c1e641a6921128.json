{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\snmed\\\\Desktop\\\\guuru\\\\guuru2\\\\Guuru_main\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import*as React from'react';import LinearProgress from'@mui/material/LinearProgress';import Typography from'@mui/material/Typography';import Box from'@mui/material/Box';function LinearProgressWithLabel(props){return/*#__PURE__*/React.createElement(Box,{sx:{display:'flex',alignItems:'center'}},/*#__PURE__*/React.createElement(Box,{sx:{width:'100%',mr:1}},/*#__PURE__*/React.createElement(LinearProgress,Object.assign({variant:\"determinate\"},props))));}export default function LinearWithValueLabel(data){var _React$useState=React.useState(10),_React$useState2=_slicedToArray(_React$useState,2),progress=_React$useState2[0],setProgress=_React$useState2[1];var start=data.value.start;var end=data.value.end;var now=data.value.now;var progress1=(now-end)/(start-end)*100;React.useEffect(function(){//set progress bar with the value of now beeing start the 100% and end the 0%\nsetProgress(progress1);},[progress1]);return/*#__PURE__*/React.createElement(Box,{sx:{width:'100%'}},/*#__PURE__*/React.createElement(LinearProgressWithLabel,{value:progress}));}","map":{"version":3,"sources":["C:/Users/snmed/Desktop/guuru/guuru2/Guuru_main/frontend/src/components/utils/LinearLabel/LinearLabel.jsx"],"names":["React","LinearProgress","Typography","Box","LinearProgressWithLabel","props","display","alignItems","width","mr","LinearWithValueLabel","data","useState","progress","setProgress","start","value","end","now","progress1","useEffect"],"mappings":"0LAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CAEA,MAAOC,CAAAA,cAAP,KAA2B,8BAA3B,CACA,MAAOC,CAAAA,UAAP,KAAuB,0BAAvB,CACA,MAAOC,CAAAA,GAAP,KAAgB,mBAAhB,CAEA,QAASC,CAAAA,uBAAT,CAAiCC,KAAjC,CAAwC,CACtC,mBACE,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAEC,OAAO,CAAE,MAAX,CAAmBC,UAAU,CAAE,QAA/B,CAAT,eACE,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAEC,KAAK,CAAE,MAAT,CAAiBC,EAAE,CAAE,CAArB,CAAT,eACE,oBAAC,cAAD,gBAAgB,OAAO,CAAC,aAAxB,EAA0CJ,KAA1C,EADF,CADF,CADF,CAQD,CAUD,cAAe,SAASK,CAAAA,oBAAT,CAA8BC,IAA9B,CAAoC,qBACjBX,KAAK,CAACY,QAAN,CAAe,EAAf,CADiB,oDAC1CC,QAD0C,qBAChCC,WADgC,qBAGjD,GAAMC,CAAAA,KAAK,CAAGJ,IAAI,CAACK,KAAL,CAAWD,KAAzB,CACA,GAAME,CAAAA,GAAG,CAAGN,IAAI,CAACK,KAAL,CAAWC,GAAvB,CACA,GAAMC,CAAAA,GAAG,CAAGP,IAAI,CAACK,KAAL,CAAWE,GAAvB,CAEA,GAAMC,CAAAA,SAAS,CAAI,CAACD,GAAG,CAAGD,GAAP,GAAeF,KAAK,CAAGE,GAAvB,CAAD,CAAgC,GAAlD,CAKAjB,KAAK,CAACoB,SAAN,CAAgB,UAAM,CACpB;AACAN,WAAW,CAACK,SAAD,CAAX,CACD,CAHD,CAGG,CAACA,SAAD,CAHH,EAMA,mBACE,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAEX,KAAK,CAAE,MAAT,CAAT,eACE,oBAAC,uBAAD,EAAyB,KAAK,CAAEK,QAAhC,EADF,CADF,CAKD","sourcesContent":["import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\n\r\nfunction LinearProgressWithLabel(props) {\r\n  return (\r\n    <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n      <Box sx={{ width: '100%', mr: 1 }}>\r\n        <LinearProgress variant=\"determinate\" {...props} />\r\n      </Box>\r\n      \r\n    </Box>\r\n  );\r\n}\r\n\r\nLinearProgressWithLabel.propTypes = {\r\n  /**\r\n   * The value of the progress indicator for the determinate and buffer variants.\r\n   * Value between 0 and 100.\r\n   */\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default function LinearWithValueLabel(data) {\r\n  const [progress, setProgress] = React.useState(10);\r\n  \r\n  const start = data.value.start;\r\n  const end = data.value.end;\r\n  const now = data.value.now;\r\n  \r\n  const progress1 = ((now - end) / (start - end)) * 100 ;\r\n\r\n\r\n\r\n  \r\n  React.useEffect(() => {\r\n    //set progress bar with the value of now beeing start the 100% and end the 0%\r\n    setProgress(progress1);\r\n  }, [progress1]);\r\n\r\n\r\n  return (\r\n    <Box sx={{ width: '100%' }}>\r\n      <LinearProgressWithLabel value={progress} />\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}