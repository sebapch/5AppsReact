{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\snmed\\\\Desktop\\\\guuru\\\\guuru2\\\\Guuru_main\\\\frontend\\\\src\\\\components\\\\auth\\\\Register.jsx\";\nimport React, { useState, useContext } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport UserContext from \"../../context/userContext\";\nimport ErrorNotice from \"../misc/ErrorNotice\";\nimport './Login.css';\n\nfunction Register() {\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [passwordCheck, setPasswordCheck] = useState();\n  const [displayName, setDisplayName] = useState();\n  const [error, setError] = useState();\n  const saldo = 0;\n  const {\n    setUserData\n  } = useContext(UserContext);\n  const history = useHistory();\n\n  const submit = async e => {\n    e.preventDefault();\n\n    try {\n      const newUser = {\n        email,\n        password,\n        passwordCheck,\n        displayName,\n        saldo\n      };\n      await axios.post(\"/users/register\", newUser);\n      const loginResponse = await axios.post(\"/users/login\", {\n        email,\n        password\n      });\n      setUserData({\n        token: loginResponse.data.token,\n        user: loginResponse.data.user\n      });\n      localStorage.setItem(\"auth-token\", loginResponse.data.token);\n      history.push(\"/\");\n    } catch (err) {\n      err.response.data.msg && setError(err.response.data.msg);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"divBody\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: \"chk\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, error && /*#__PURE__*/React.createElement(ErrorNotice, {\n    message: error,\n    clearError: () => setError(undefined),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"chk\",\n    \"aria-hidden\": \"true\",\n    className: \"top-text2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"REGISTER\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"dsplay-name\",\n    className: \"form-input\",\n    placeholder: \"Nombre\",\n    onChange: e => setDisplayName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    className: \"form-input\",\n    placeholder: \"email\",\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    className: \"form-input\",\n    placeholder: \"password\",\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    className: \"form-input\",\n    placeholder: \"repetir password\",\n    onChange: e => setPasswordCheck(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Login\",\n    className: \"form-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  })))))\n  /* <div className=\"register\">\r\n      <h2>Register</h2>\r\n      {error && <ErrorNotice message={error} clearError={() => setError(undefined)} />}\r\n      <div className='box-form'>\r\n      <form onSubmit={submit} className='form-login'>\r\n          <label>Nombre: </label>\r\n          <input type=\"text\" id=\"dsplay-name\" onChange={e => setDisplayName(e.target.value)}/>\r\n          <label>Email: </label>\r\n          <input type=\"email\" id=\"email\" onChange={e => setEmail(e.target.value)}/>\r\n          <label>Password: </label>\r\n          <input type=\"password\" id=\"password\" onChange={e => setPassword(e.target.value)}/>\r\n          <label>Repetir Password: </label>\r\n          <input type=\"password\" onChange={e => setPasswordCheck(e.target.value)}/>\r\n          \r\n          <input type=\"submit\" value=\"Register\" className=\"btn btn-primary\" />\r\n      </form>\r\n      </div>\r\n  </div> */\n  ;\n}\n\nexport default Register;","map":{"version":3,"sources":["C:/Users/snmed/Desktop/guuru/guuru2/Guuru_main/frontend/src/components/auth/Register.jsx"],"names":["React","useState","useContext","useHistory","axios","UserContext","ErrorNotice","Register","email","setEmail","password","setPassword","passwordCheck","setPasswordCheck","displayName","setDisplayName","error","setError","saldo","setUserData","history","submit","e","preventDefault","newUser","post","loginResponse","token","data","user","localStorage","setItem","push","err","response","msg","undefined","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport UserContext from \"../../context/userContext\";\r\nimport ErrorNotice from \"../misc/ErrorNotice\";\r\nimport './Login.css'\r\n\r\nfunction Register () {\r\n\r\n    const [email, setEmail] = useState();\r\n    const [password, setPassword] = useState();\r\n    const [passwordCheck, setPasswordCheck] = useState();\r\n    const [displayName, setDisplayName] = useState();\r\n    const [error, setError] = useState();\r\n    const saldo = 0;\r\n\r\n    const { setUserData } = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n    const submit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try{\r\n            const newUser = {email, password, passwordCheck, displayName, saldo};\r\n            await axios.post(\"/users/register\", newUser);\r\n            const loginResponse = await axios.post(\"/users/login\", {\r\n                email, password\r\n            });\r\n            setUserData({\r\n                token: loginResponse.data.token,\r\n                user: loginResponse.data.user\r\n            });\r\n            localStorage.setItem(\"auth-token\", loginResponse.data.token);\r\n            history.push(\"/\");\r\n        } catch(err) {\r\n            err.response.data.msg && setError(err.response.data.msg)\r\n        }\r\n        \r\n    };\r\n   \r\n    return ( \r\n<div className=\"divBody\">\r\n      <div className=\"form-main\">\r\n        <input type=\"checkbox\" id=\"chk\" aria-hidden=\"true\" />\r\n        <div className=\"signup\">\r\n          {error && (\r\n            <ErrorNotice\r\n              message={error}\r\n              clearError={() => setError(undefined)}\r\n            />\r\n          )}\r\n          <form onSubmit={submit}>\r\n            <label for=\"chk\" aria-hidden=\"true\" className=\"top-text2\">\r\n              REGISTER\r\n            </label>\r\n            \r\n                <input type=\"text\" id=\"dsplay-name\" className=\"form-input\" placeholder=\"Nombre\" onChange={e => setDisplayName(e.target.value)}/>\r\n                \r\n                <input type=\"email\" id=\"email\" className=\"form-input\" placeholder=\"email\" onChange={e => setEmail(e.target.value)}/>\r\n                \r\n                <input type=\"password\" id=\"password\" className=\"form-input\" placeholder=\"password\" onChange={e => setPassword(e.target.value)}/>\r\n                \r\n                <input type=\"password\" className=\"form-input\" placeholder=\"repetir password\" onChange={e => setPasswordCheck(e.target.value)}/>\r\n\r\n            <input type=\"submit\" value=\"Login\" className=\"form-button\" />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n        /* <div className=\"register\">\r\n            <h2>Register</h2>\r\n            {error && <ErrorNotice message={error} clearError={() => setError(undefined)} />}\r\n            <div className='box-form'>\r\n            <form onSubmit={submit} className='form-login'>\r\n                <label>Nombre: </label>\r\n                <input type=\"text\" id=\"dsplay-name\" onChange={e => setDisplayName(e.target.value)}/>\r\n                <label>Email: </label>\r\n                <input type=\"email\" id=\"email\" onChange={e => setEmail(e.target.value)}/>\r\n                <label>Password: </label>\r\n                <input type=\"password\" id=\"password\" onChange={e => setPassword(e.target.value)}/>\r\n                <label>Repetir Password: </label>\r\n                <input type=\"password\" onChange={e => setPasswordCheck(e.target.value)}/>\r\n                \r\n                <input type=\"submit\" value=\"Register\" className=\"btn btn-primary\" />\r\n            </form>\r\n            </div>\r\n        </div> */\r\n        );\r\n}\r\n \r\nexport default Register;"]},"metadata":{},"sourceType":"module"}