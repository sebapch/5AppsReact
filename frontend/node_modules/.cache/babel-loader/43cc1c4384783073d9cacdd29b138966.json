{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\snmed\\\\Desktop\\\\guuru\\\\guuru2\\\\Guuru_main\\\\frontend\\\\src\\\\components\\\\pages\\\\Private\\\\EditVaultData.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport { Grid, Input } from '@mui/material';\nimport { useParams, Link } from 'react-router-dom';\n\nconst EditVaultData = () => {\n  var _vault$vaults;\n\n  const [vault, setVault] = useState([]);\n  const {\n    id,\n    vaultid\n  } = useParams();\n  const [usdt, setUsdt] = useState(0);\n  const [btc, setBtc] = useState(0);\n  const [eth, setEth] = useState(0);\n  const [ceuro, setCeuro] = useState(0);\n  const [ada, setAda] = useState(0);\n  const [bnb, setBnb] = useState(0);\n  const [cake, setCake] = useState(0);\n  const [land, setLand] = useState(0);\n  const [bsw, setBsw] = useState(0);\n  let coins = [{\n    coin: 'USDT',\n    quantity: usdt\n  }, {\n    coin: 'BTC',\n    quantity: btc\n  }, {\n    coin: 'ETH',\n    quantity: eth\n  }, {\n    coin: 'cEuro',\n    quantity: ceuro\n  }, {\n    coin: 'ADA',\n    quantity: ada\n  }, {\n    coin: 'BNB',\n    quantity: bnb\n  }, {\n    coin: 'CAKE',\n    quantity: cake\n  }, {\n    coin: 'LAND',\n    quantity: land\n  }, {\n    coin: 'BSW',\n    quantity: bsw\n  }];\n\n  const saveCoins = () => {\n    Axios.post(`/users/api/vaults/${id}/${vaultid}`, {\n      coins\n    }).then(res => {\n      console.log(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleChange = (newQuantity, index) => {\n    console.log(index, newQuantity);\n\n    switch (index) {\n      case 0:\n        setUsdt(newQuantity);\n        break;\n\n      case 1:\n        setBtc(newQuantity);\n        break;\n\n      case 2:\n        setEth(newQuantity);\n        break;\n\n      case 3:\n        setCeuro(newQuantity);\n        break;\n\n      case 4:\n        setAda(newQuantity);\n        break;\n\n      case 5:\n        setBnb(newQuantity);\n        break;\n\n      case 6:\n        setCake(newQuantity);\n        break;\n\n      case 7:\n        setLand(newQuantity);\n        break;\n\n      case 8:\n        setBsw(newQuantity);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  async function traerVault() {\n    await Axios.get(`/users/api/vaults/${id}/${vaultid}`).then(res => {\n      setVault(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  useEffect(() => {\n    traerVault();\n  }, []);\n  useEffect(() => {\n    setValues();\n  }, [vault]);\n\n  const setValues = () => {\n    if (vault) {\n      console.log('hola' + vault._id);\n      console.log('hola' + (vault === null || vault === void 0 ? void 0 : vault.vaults[0].quantity));\n    }\n  };\n\n  console.log(vault);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, (_vault$vaults = vault.vaults) === null || _vault$vaults === void 0 ? void 0 : _vault$vaults.map(vault => {\n    var _vault$coins;\n\n    return vault._id === vaultid ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n      className: \"d-flex flex-column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 29\n      }\n    }, \"Vault ID : \", vault._id), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 29\n      }\n    }, \"Activada: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      defaultValue: vault.activated,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 29\n      }\n    }, \"Auto Renovar: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      defaultValue: vault.autoRenew,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 29\n      }\n    }, \"Valor: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      defaultValue: vault.funds,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 29\n      }\n    }, \"Valor: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      defaultValue: vault.funds,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 29\n      }\n    }, \"Stable: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      defaultValue: vault.stable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 29\n      }\n    }, \"Timelock: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      defaultValue: vault.timelock,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 29\n      }\n    }, \"Creada el: \"), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 29\n      }\n    }, vault.createdAt), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 29\n      }\n    }, \"Ultima Modificacion: \"), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 29\n      }\n    }, vault.updatedAt), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 29\n      }\n    }, \"Coins: \"), /*#__PURE__*/React.createElement(Grid, {\n      className: \"d-flex  flex-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 29\n      }\n    }, (_vault$coins = vault.coins) === null || _vault$coins === void 0 ? void 0 : _vault$coins.map((coin, index) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 4,\n      className: \"d-flex flex-column align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 37\n      }\n    }, coin.coin), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      key: index,\n      defaultValue: coin.quantity,\n      className: \"w-50\",\n      onChange: e => handleChange(e.target.value, index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 37\n      }\n    })))))), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: saveCoins,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 29\n      }\n    }, \"GUARDAR CAMBIOS\")) : null;\n  })));\n};\n\nexport default EditVaultData;","map":{"version":3,"sources":["C:/Users/snmed/Desktop/guuru/guuru2/Guuru_main/frontend/src/components/pages/Private/EditVaultData.jsx"],"names":["React","useState","useEffect","Axios","Grid","Input","useParams","Link","EditVaultData","vault","setVault","id","vaultid","usdt","setUsdt","btc","setBtc","eth","setEth","ceuro","setCeuro","ada","setAda","bnb","setBnb","cake","setCake","land","setLand","bsw","setBsw","coins","coin","quantity","saveCoins","post","then","res","console","log","catch","err","handleChange","newQuantity","index","traerVault","get","data","setValues","_id","vaults","map","activated","autoRenew","funds","stable","timelock","createdAt","updatedAt","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport Axios from 'axios';\r\nimport {Grid, Input } from '@mui/material';\r\nimport { useParams, Link } from 'react-router-dom'\r\n\r\nconst EditVaultData = () => {\r\n    const [vault, setVault] = useState([]);\r\n    const { id, vaultid } = useParams();\r\n    const [usdt, setUsdt ] = useState(0);\r\n    const [btc, setBtc ] = useState(0);\r\n    const [eth, setEth ] = useState(0);\r\n    const [ceuro, setCeuro ] = useState(0);\r\n    const [ada, setAda ] = useState(0);\r\n    const [bnb, setBnb ] = useState(0);\r\n    const [cake, setCake ] = useState(0);\r\n    const [land, setLand ] = useState(0);\r\n    const [bsw, setBsw ] = useState(0);\r\n    let coins = [{coin: 'USDT', quantity: usdt}, {coin: 'BTC', quantity: btc}, {coin: 'ETH', quantity: eth}, {coin: 'cEuro', quantity: ceuro}, {coin: 'ADA', quantity: ada}, {coin: 'BNB', quantity: bnb}, {coin: 'CAKE', quantity: cake}, {coin: 'LAND', quantity: land}, {coin: 'BSW', quantity: bsw}];\r\n\r\n    const saveCoins = () => {\r\n        Axios.post(`/users/api/vaults/${id}/${vaultid}`, {\r\n            coins\r\n        })\r\n        .then(res => {\r\n            console.log(res);\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    const handleChange = (newQuantity, index) => {\r\n        console.log(index, newQuantity);\r\n        switch(index){\r\n            case 0:\r\n                setUsdt(newQuantity);\r\n                break;\r\n            case 1:\r\n                setBtc(newQuantity);\r\n                break;\r\n            case 2:\r\n                setEth(newQuantity);\r\n                break;\r\n            case 3:\r\n                setCeuro(newQuantity);\r\n                break;\r\n            case 4:\r\n                setAda(newQuantity);\r\n                break;\r\n            case 5:\r\n                setBnb(newQuantity);\r\n                break;\r\n            case 6:\r\n                setCake(newQuantity);\r\n                break;\r\n            case 7:\r\n                setLand(newQuantity);\r\n                break;\r\n            case 8:\r\n                setBsw(newQuantity);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n    async function traerVault() {\r\n        await Axios.get(`/users/api/vaults/${id}/${vaultid}`)\r\n            .then(res => {\r\n                setVault(res.data)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n    useEffect(() => {\r\n        traerVault();\r\n        \r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setValues();\r\n    }, [vault])\r\n\r\n    const setValues = () =>{\r\n        if(vault){\r\n            console.log('hola' + vault._id);\r\n            console.log('hola' + vault?.vaults[0].quantity);\r\n\r\n    }}\r\n\r\n\r\n \r\n\r\n    console.log(vault)\r\n    return (\r\n        <>\r\n            <Grid container >\r\n                {vault.vaults?.map((vault) => (\r\n                    (vault._id === vaultid) ? (\r\n                        <>\r\n                        <Grid className='d-flex flex-column'>\r\n                            <h1>Vault ID : {vault._id}</h1>\r\n                            \r\n                            <label>Activada: </label>\r\n                            <input type=\"text\" defaultValue={vault.activated} />\r\n                            \r\n                            <label>Auto Renovar: </label>\r\n                            <input type=\"text\" defaultValue={vault.autoRenew} />\r\n                            \r\n                            <label>Valor: </label>\r\n                            <input type=\"text\" defaultValue={vault.funds} />\r\n\r\n                            <label>Valor: </label>\r\n                            <input type=\"text\" defaultValue={vault.funds} />\r\n\r\n                            <label>Stable: </label>\r\n                            <input type=\"text\" defaultValue={vault.stable} />\r\n\r\n                            <label>Timelock: </label>\r\n                            <input type=\"text\" defaultValue={vault.timelock} />\r\n\r\n                            <label>Creada el: </label>\r\n                            <label>{vault.createdAt}</label>\r\n\r\n                            <label>Ultima Modificacion: </label>\r\n                            <label>{vault.updatedAt}</label>\r\n\r\n                            <label>Coins: </label>\r\n                            <Grid className=\"d-flex  flex-wrap\">\r\n                            {vault.coins?.map((coin, index) => (\r\n                                <>\r\n                                <Grid item md={4} className='d-flex flex-column align-items-center'>\r\n                                    <label>{coin.coin}</label>\r\n                                    \r\n                                    \r\n                                    <input type=\"text\" key={index} defaultValue={coin.quantity}  className='w-50' onChange={(e) => handleChange(e.target.value, index)} />\r\n                                    </Grid>\r\n                                </>\r\n                            ))}\r\n                            </Grid>\r\n                        </Grid>\r\n                            \r\n                            <button onClick={saveCoins}>GUARDAR CAMBIOS</button>\r\n                        </>\r\n\r\n                    )\r\n                        : null\r\n                ))}\r\n\r\n\r\n            </Grid>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditVaultData"]},"metadata":{},"sourceType":"module"}