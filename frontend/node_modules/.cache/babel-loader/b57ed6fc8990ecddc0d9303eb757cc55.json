{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\snmed\\\\Desktop\\\\guuru\\\\guuru2\\\\Guuru_main\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\snmed\\\\Desktop\\\\guuru\\\\guuru2\\\\Guuru_main\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Users\\\\snmed\\\\Desktop\\\\guuru\\\\guuru2\\\\Guuru_main\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import Axios from'axios';import{Grid,Input}from'@mui/material';import{useParams,Link}from'react-router-dom';var EditVaultData=function EditVaultData(){var _vault$vaults;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),vault=_useState2[0],setVault=_useState2[1];var _useParams=useParams(),id=_useParams.id,vaultid=_useParams.vaultid;var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),usdt=_useState4[0],setUsdt=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),btc=_useState6[0],setBtc=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),eth=_useState8[0],setEth=_useState8[1];var _useState9=useState(0),_useState10=_slicedToArray(_useState9,2),ceuro=_useState10[0],setCeuro=_useState10[1];var _useState11=useState(0),_useState12=_slicedToArray(_useState11,2),ada=_useState12[0],setAda=_useState12[1];var _useState13=useState(0),_useState14=_slicedToArray(_useState13,2),bnb=_useState14[0],setBnb=_useState14[1];var _useState15=useState(0),_useState16=_slicedToArray(_useState15,2),cake=_useState16[0],setCake=_useState16[1];var _useState17=useState(0),_useState18=_slicedToArray(_useState17,2),land=_useState18[0],setLand=_useState18[1];var _useState19=useState(0),_useState20=_slicedToArray(_useState19,2),bsw=_useState20[0],setBsw=_useState20[1];var coins=[{coin:'USDT',quantity:usdt},{coin:'BTC',quantity:btc},{coin:'ETH',quantity:eth},{coin:'cEuro',quantity:ceuro},{coin:'ADA',quantity:ada},{coin:'BNB',quantity:bnb},{coin:'CAKE',quantity:cake},{coin:'LAND',quantity:land},{coin:'BSW',quantity:bsw}];var saveCoins=function saveCoins(){Axios.post(\"/users/api/vaults/\".concat(id,\"/\").concat(vaultid),{coins:coins}).then(function(res){console.log(res);}).catch(function(err){console.log(err);});};var handleChange=function handleChange(newQuantity,index){console.log(index,newQuantity);switch(index){case 0:setUsdt(newQuantity);break;case 1:setBtc(newQuantity);break;case 2:setEth(newQuantity);break;case 3:setCeuro(newQuantity);break;case 4:setAda(newQuantity);break;case 5:setBnb(newQuantity);break;case 6:setCake(newQuantity);break;case 7:setLand(newQuantity);break;case 8:setBsw(newQuantity);break;default:break;}};function traerVault(){return _traerVault.apply(this,arguments);}function _traerVault(){_traerVault=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return Axios.get(\"/users/api/vaults/\".concat(id,\"/\").concat(vaultid)).then(function(res){setVault(res.data);}).catch(function(err){console.log(err);});case 2:case\"end\":return _context.stop();}}},_callee);}));return _traerVault.apply(this,arguments);}useEffect(function(){traerVault();},[]);console.log(coins);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Grid,{container:true},(_vault$vaults=vault.vaults)===null||_vault$vaults===void 0?void 0:_vault$vaults.map(function(vault){var _vault$coins;return vault._id===vaultid?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Grid,{className:\"d-flex flex-column\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Vault ID : \",vault._id),/*#__PURE__*/React.createElement(\"label\",null,\"Activada: \"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",defaultValue:vault.activated}),/*#__PURE__*/React.createElement(\"label\",null,\"Auto Renovar: \"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",defaultValue:vault.autoRenew}),/*#__PURE__*/React.createElement(\"label\",null,\"Valor: \"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",defaultValue:vault.funds}),/*#__PURE__*/React.createElement(\"label\",null,\"Valor: \"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",defaultValue:vault.funds}),/*#__PURE__*/React.createElement(\"label\",null,\"Stable: \"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",defaultValue:vault.stable}),/*#__PURE__*/React.createElement(\"label\",null,\"Timelock: \"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",defaultValue:vault.timelock}),/*#__PURE__*/React.createElement(\"label\",null,\"Creada el: \"),/*#__PURE__*/React.createElement(\"label\",null,vault.createdAt),/*#__PURE__*/React.createElement(\"label\",null,\"Ultima Modificacion: \"),/*#__PURE__*/React.createElement(\"label\",null,vault.updatedAt),/*#__PURE__*/React.createElement(\"label\",null,\"Coins: \"),/*#__PURE__*/React.createElement(Grid,{className:\"d-flex  flex-wrap\"},(_vault$coins=vault.coins)===null||_vault$coins===void 0?void 0:_vault$coins.map(function(coin,index){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Grid,{item:true,md:4,className:\"d-flex flex-column align-items-center\"},/*#__PURE__*/React.createElement(\"label\",null,coin.coin),console.log(coin.coin),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",key:index,defaultValue:coin.quantity,className:\"w-50\",onChange:function onChange(e){return handleChange(e.target.value,index);}})));}))),/*#__PURE__*/React.createElement(\"button\",{onClick:saveCoins},\"GUARDAR CAMBIOS\")):null;})));};export default EditVaultData;","map":{"version":3,"sources":["C:/Users/snmed/Desktop/guuru/guuru2/Guuru_main/frontend/src/components/pages/Private/EditVaultData.jsx"],"names":["React","useState","useEffect","Axios","Grid","Input","useParams","Link","EditVaultData","vault","setVault","id","vaultid","usdt","setUsdt","btc","setBtc","eth","setEth","ceuro","setCeuro","ada","setAda","bnb","setBnb","cake","setCake","land","setLand","bsw","setBsw","coins","coin","quantity","saveCoins","post","then","res","console","log","catch","err","handleChange","newQuantity","index","traerVault","get","data","vaults","map","_id","activated","autoRenew","funds","stable","timelock","createdAt","updatedAt","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport Axios from 'axios';\r\nimport {Grid, Input } from '@mui/material';\r\nimport { useParams, Link } from 'react-router-dom'\r\n\r\nconst EditVaultData = () => {\r\n    const [vault, setVault] = useState([]);\r\n    const { id, vaultid } = useParams();\r\n    const [usdt, setUsdt ] = useState(0);\r\n    const [btc, setBtc ] = useState(0);\r\n    const [eth, setEth ] = useState(0);\r\n    const [ceuro, setCeuro ] = useState(0);\r\n    const [ada, setAda ] = useState(0);\r\n    const [bnb, setBnb ] = useState(0);\r\n    const [cake, setCake ] = useState(0);\r\n    const [land, setLand ] = useState(0);\r\n    const [bsw, setBsw ] = useState(0);\r\n    let coins = [{coin: 'USDT', quantity: usdt}, {coin: 'BTC', quantity: btc}, {coin: 'ETH', quantity: eth}, {coin: 'cEuro', quantity: ceuro}, {coin: 'ADA', quantity: ada}, {coin: 'BNB', quantity: bnb}, {coin: 'CAKE', quantity: cake}, {coin: 'LAND', quantity: land}, {coin: 'BSW', quantity: bsw}];\r\n\r\n    const saveCoins = () => {\r\n        Axios.post(`/users/api/vaults/${id}/${vaultid}`, {\r\n            coins\r\n        })\r\n        .then(res => {\r\n            console.log(res);\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    const handleChange = (newQuantity, index) => {\r\n        console.log(index, newQuantity);\r\n        switch(index){\r\n            case 0:\r\n                setUsdt(newQuantity);\r\n                break;\r\n            case 1:\r\n                setBtc(newQuantity);\r\n                break;\r\n            case 2:\r\n                setEth(newQuantity);\r\n                break;\r\n            case 3:\r\n                setCeuro(newQuantity);\r\n                break;\r\n            case 4:\r\n                setAda(newQuantity);\r\n                break;\r\n            case 5:\r\n                setBnb(newQuantity);\r\n                break;\r\n            case 6:\r\n                setCake(newQuantity);\r\n                break;\r\n            case 7:\r\n                setLand(newQuantity);\r\n                break;\r\n            case 8:\r\n                setBsw(newQuantity);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    async function traerVault() {\r\n        await Axios.get(`/users/api/vaults/${id}/${vaultid}`)\r\n            .then(res => {\r\n                setVault(res.data)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n    useEffect(() => {\r\n        traerVault();\r\n    }, []);\r\n\r\n\r\n    console.log(coins);\r\n    return (\r\n        <>\r\n            <Grid container >\r\n                {vault.vaults?.map((vault) => (\r\n                    (vault._id === vaultid) ? (\r\n                        <>\r\n                        <Grid className='d-flex flex-column'>\r\n                            <h1>Vault ID : {vault._id}</h1>\r\n                            \r\n                            <label>Activada: </label>\r\n                            <input type=\"text\" defaultValue={vault.activated} />\r\n                            \r\n                            <label>Auto Renovar: </label>\r\n                            <input type=\"text\" defaultValue={vault.autoRenew} />\r\n                            \r\n                            <label>Valor: </label>\r\n                            <input type=\"text\" defaultValue={vault.funds} />\r\n\r\n                            <label>Valor: </label>\r\n                            <input type=\"text\" defaultValue={vault.funds} />\r\n\r\n                            <label>Stable: </label>\r\n                            <input type=\"text\" defaultValue={vault.stable} />\r\n\r\n                            <label>Timelock: </label>\r\n                            <input type=\"text\" defaultValue={vault.timelock} />\r\n\r\n                            <label>Creada el: </label>\r\n                            <label>{vault.createdAt}</label>\r\n\r\n                            <label>Ultima Modificacion: </label>\r\n                            <label>{vault.updatedAt}</label>\r\n\r\n                            <label>Coins: </label>\r\n                            <Grid className=\"d-flex  flex-wrap\">\r\n                            {vault.coins?.map((coin, index) => (\r\n                                <>\r\n                                <Grid item md={4} className='d-flex flex-column align-items-center'>\r\n                                    <label>{coin.coin}</label>\r\n                                    {console.log(coin.coin)}\r\n                                    \r\n                                    <input type=\"text\" key={index} defaultValue={coin.quantity} className='w-50' onChange={(e) => handleChange(e.target.value, index)}/>\r\n                                    </Grid>\r\n                                </>\r\n                            ))}\r\n                            </Grid>\r\n                        </Grid>\r\n                            \r\n                            <button onClick={saveCoins}>GUARDAR CAMBIOS</button>\r\n                        </>\r\n\r\n                    )\r\n                        : null\r\n                ))}\r\n\r\n\r\n            </Grid>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditVaultData"]},"metadata":{},"sourceType":"module"}