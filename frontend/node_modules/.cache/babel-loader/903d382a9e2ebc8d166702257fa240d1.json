{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\snmed\\\\Desktop\\\\guuru\\\\guuru2\\\\Guuru_main\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\snmed\\\\Desktop\\\\guuru\\\\guuru2\\\\Guuru_main\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Users\\\\snmed\\\\Desktop\\\\guuru\\\\guuru2\\\\Guuru_main\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useContext}from\"react\";import axios from\"axios\";import UserContext from\"../../../context/userContext\";var VaultsSum=function VaultsSum(){var _userData$user;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),cryptos=_useState2[0],setCryptos=_useState2[1];var _useContext=useContext(UserContext),userData=_useContext.userData,setUserData=_useContext.setUserData;var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),sumVaults=_useState4[0],setSumVaults=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),loading=_useState6[0],setLoading=_useState6[1];var total=0;var uservaults=(_userData$user=userData.user)===null||_userData$user===void 0?void 0:_userData$user.vaults;function getSumOfFundsInUSD(){return _getSumOfFundsInUSD.apply(this,arguments);}function _getSumOfFundsInUSD(){_getSumOfFundsInUSD=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(\"https://min-api.cryptocompare.com/data/pricemulti?fsyms=BTC,ETH,ADA,BNB,Cake,LAND,BSW,&tsyms=USD\").then(function(res){var cryptos=res.data;setCryptos(cryptos);});case 2:case\"end\":return _context.stop();}}},_callee);}));return _getSumOfFundsInUSD.apply(this,arguments);}var getSumOffFunds=function getSumOffFunds(){setLoading(true);var totalF=0;if(uservaults){uservaults.map(function(vault){console.log(vault.funds);vault.coins.map(function(coin){if(coin.coin!==\"USDT\"&&coin.coin!==\"cEuro\"){var _cryptos$coin$coin;totalF+=((_cryptos$coin$coin=cryptos[coin.coin])===null||_cryptos$coin$coin===void 0?void 0:_cryptos$coin$coin.USD)*coin.quantity;setSumVaults(totalF);setLoading(false);}else{totalF+=coin.quantity;setSumVaults(totalF);setLoading(false);}});});}};useEffect(function(){getSumOfFundsInUSD();},[uservaults]);useEffect(function(){getSumOffFunds();},[cryptos]);return/*#__PURE__*/React.createElement(React.Fragment,null,sumVaults&&/*#__PURE__*/React.createElement(\"h1\",null,sumVaults.toFixed(2)));};export default VaultsSum;","map":{"version":3,"sources":["C:/Users/snmed/Desktop/guuru/guuru2/Guuru_main/frontend/src/components/pages/Vaults/VaultsSum.jsx"],"names":["React","useState","useEffect","useContext","axios","UserContext","VaultsSum","cryptos","setCryptos","userData","setUserData","sumVaults","setSumVaults","loading","setLoading","total","uservaults","user","vaults","getSumOfFundsInUSD","get","then","res","data","getSumOffFunds","totalF","map","vault","console","log","funds","coins","coin","USD","quantity","toFixed"],"mappings":"2iBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,UAArC,KAAuD,OAAvD,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,WAAP,KAAwB,8BAAxB,CAIA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,kCACQL,QAAQ,CAAC,EAAD,CADhB,wCACfM,OADe,eACNC,UADM,+BAEYL,UAAU,CAACE,WAAD,CAFtB,CAEdI,QAFc,aAEdA,QAFc,CAEJC,WAFI,aAEJA,WAFI,gBAGYT,QAAQ,CAAC,CAAD,CAHpB,yCAGfU,SAHe,eAGJC,YAHI,8BAIQX,QAAQ,CAAC,KAAD,CAJhB,yCAIfY,OAJe,eAINC,UAJM,eAKtB,GAAIC,CAAAA,KAAK,CAAG,CAAZ,CACA,GAAMC,CAAAA,UAAU,iBAAGP,QAAQ,CAACQ,IAAZ,yCAAG,eAAeC,MAAlC,CANsB,QAQPC,CAAAA,kBARO,gKAQtB,yJACQf,CAAAA,KAAK,CACRgB,GADG,CAEF,kGAFE,EAIHC,IAJG,CAIE,SAACC,GAAD,CAAS,CACb,GAAMf,CAAAA,OAAO,CAAGe,GAAG,CAACC,IAApB,CACAf,UAAU,CAACD,OAAD,CAAV,CACD,CAPG,CADR,uDARsB,qDAmBtB,GAAMiB,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAC3BV,UAAU,CAAC,IAAD,CAAV,CACA,GAAIW,CAAAA,MAAM,CAAG,CAAb,CACA,GAAIT,UAAJ,CAAgB,CACdA,UAAU,CAACU,GAAX,CAAe,SAACC,KAAD,CAAW,CACxBC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,KAAlB,EACAH,KAAK,CAACI,KAAN,CAAYL,GAAZ,CAAgB,SAACM,IAAD,CAAU,CACxB,GAAIA,IAAI,CAACA,IAAL,GAAc,MAAd,EAAwBA,IAAI,CAACA,IAAL,GAAc,OAA1C,CAAmD,wBACjDP,MAAM,EAAI,qBAAAlB,OAAO,CAACyB,IAAI,CAACA,IAAN,CAAP,gEAAoBC,GAApB,EAA0BD,IAAI,CAACE,QAAzC,CACAtB,YAAY,CAACa,MAAD,CAAZ,CACAX,UAAU,CAAC,KAAD,CAAV,CACD,CAJD,IAIO,CACLW,MAAM,EAAIO,IAAI,CAACE,QAAf,CACAtB,YAAY,CAACa,MAAD,CAAZ,CACAX,UAAU,CAAC,KAAD,CAAV,CACD,CACF,CAVD,EAWD,CAbD,EAcD,CACF,CAnBD,CAqBAZ,SAAS,CAAC,UAAM,CACdiB,kBAAkB,GAEnB,CAHQ,CAGN,CAACH,UAAD,CAHM,CAAT,CAKDd,SAAS,CAAC,UAAM,CACbsB,cAAc,GAChB,CAFQ,CAEN,CAACjB,OAAD,CAFM,CAAT,CAKC,mBAAO,wCACNI,SAAS,eAAI,8BAAKA,SAAS,CAACwB,OAAV,CAAkB,CAAlB,CAAL,CADP,CAAP,CAID,CAtDD,CAwDA,cAAe7B,CAAAA,SAAf","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport UserContext from \"../../../context/userContext\";\r\n\r\n\r\n\r\nconst VaultsSum = () => {\r\n  const [cryptos, setCryptos] = useState([]);\r\n  const { userData, setUserData } = useContext(UserContext);\r\n  const [sumVaults, setSumVaults] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  let total = 0;\r\n  const uservaults = userData.user?.vaults;\r\n\r\n  async function getSumOfFundsInUSD() {\r\n    await axios\r\n      .get(\r\n        \"https://min-api.cryptocompare.com/data/pricemulti?fsyms=BTC,ETH,ADA,BNB,Cake,LAND,BSW,&tsyms=USD\"\r\n      )\r\n      .then((res) => {\r\n        const cryptos = res.data;\r\n        setCryptos(cryptos);\r\n      });\r\n  }\r\n\r\n  const getSumOffFunds = () => {\r\n    setLoading(true);\r\n    let totalF = 0;\r\n    if (uservaults) {\r\n      uservaults.map((vault) => {\r\n        console.log(vault.funds);\r\n        vault.coins.map((coin) => {\r\n          if (coin.coin !== \"USDT\" && coin.coin !== \"cEuro\") {\r\n            totalF += cryptos[coin.coin]?.USD * coin.quantity;\r\n            setSumVaults(totalF);\r\n            setLoading(false);\r\n          } else {\r\n            totalF += coin.quantity;\r\n            setSumVaults(totalF);\r\n            setLoading(false);\r\n          }\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getSumOfFundsInUSD();  \r\n    \r\n  }, [uservaults]);\r\n\r\n useEffect(() => {\r\n    getSumOffFunds();\r\n }, [cryptos])\r\n\r\n\r\n  return <>\r\n  {sumVaults && <h1>{sumVaults.toFixed(2)}</h1>}\r\n  \r\n  </>;\r\n};\r\n\r\nexport default VaultsSum;\r\n"]},"metadata":{},"sourceType":"module"}