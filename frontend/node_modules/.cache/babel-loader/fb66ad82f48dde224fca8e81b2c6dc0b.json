{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\snmed\\\\Desktop\\\\guuru\\\\guuru2\\\\Guuru_main\\\\frontend\\\\src\\\\components\\\\utils\\\\LinearLabel\\\\LinearLabel.jsx\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\n\nfunction LinearProgressWithLabel(props) {\n  return /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      width: '100%',\n      mr: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(LinearProgress, Object.assign({\n    variant: \"determinate\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      minWidth: 35\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"text.secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, `${Math.round(props.value)}%`)));\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\r\n   * The value of the progress indicator for the determinate and buffer variants.\r\n   * Value between 0 and 100.\r\n   */\n  value: PropTypes.number.isRequired\n};\nexport default function LinearWithValueLabel(data) {\n  const [progress, setProgress] = React.useState(10);\n  console.log(start);\n  console.log(end);\n  console.log(now);\n  const start = data.value.start;\n  const end = data.value.end;\n  const now = data.value.now;\n  const test = '1654199136';\n  const progress1 = (test - start) / (end - start) * 100;\n  console.log(progress1);\n  console.log(now);\n  React.useEffect(() => {\n    //set progress bar with the value of now beeing start the 100% and end the 0%\n    setProgress(progress1);\n  }, [progress1]);\n  return /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(LinearProgressWithLabel, {\n    value: progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/snmed/Desktop/guuru/guuru2/Guuru_main/frontend/src/components/utils/LinearLabel/LinearLabel.jsx"],"names":["React","PropTypes","LinearProgress","Typography","Box","LinearProgressWithLabel","props","display","alignItems","width","mr","minWidth","Math","round","value","propTypes","number","isRequired","LinearWithValueLabel","data","progress","setProgress","useState","console","log","start","end","now","test","progress1","useEffect"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;;AAEA,SAASC,uBAAT,CAAiCC,KAAjC,EAAwC;AACtC,sBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE;AAAEC,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,UAAU,EAAE;AAA/B,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE;AAAEC,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,EAAE,EAAE;AAArB,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAgB,IAAA,OAAO,EAAC;AAAxB,KAA0CJ,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF,eAIE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE;AAAEK,MAAAA,QAAQ,EAAE;AAAZ,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,KAAK,EAAC,gBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqD,GAAEC,IAAI,CAACC,KAAL,CACrDP,KAAK,CAACQ,KAD+C,CAErD,GAFF,CADF,CAJF,CADF;AAYD;;AAEDT,uBAAuB,CAACU,SAAxB,GAAoC;AAClC;;;;AAIAD,EAAAA,KAAK,EAAEb,SAAS,CAACe,MAAV,CAAiBC;AALU,CAApC;AAQA,eAAe,SAASC,oBAAT,CAA8BC,IAA9B,EAAoC;AACjD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BrB,KAAK,CAACsB,QAAN,CAAe,EAAf,CAAhC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACA,QAAMF,KAAK,GAAGN,IAAI,CAACL,KAAL,CAAWW,KAAzB;AACA,QAAMC,GAAG,GAAGP,IAAI,CAACL,KAAL,CAAWY,GAAvB;AACA,QAAMC,GAAG,GAAGR,IAAI,CAACL,KAAL,CAAWa,GAAvB;AACA,QAAMC,IAAI,GAAG,YAAb;AACA,QAAMC,SAAS,GAAI,CAACD,IAAI,GAAGH,KAAR,KAAkBC,GAAG,GAAGD,KAAxB,CAAD,GAAmC,GAArD;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYK,SAAZ;AACAN,EAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACA3B,EAAAA,KAAK,CAAC8B,SAAN,CAAgB,MAAM;AACpB;AACAT,IAAAA,WAAW,CAACQ,SAAD,CAAX;AACD,GAHD,EAGG,CAACA,SAAD,CAHH;AAMA,sBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE;AAAEpB,MAAAA,KAAK,EAAE;AAAT,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,uBAAD;AAAyB,IAAA,KAAK,EAAEW,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD","sourcesContent":["import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\n\r\nfunction LinearProgressWithLabel(props) {\r\n  return (\r\n    <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n      <Box sx={{ width: '100%', mr: 1 }}>\r\n        <LinearProgress variant=\"determinate\" {...props} />\r\n      </Box>\r\n      <Box sx={{ minWidth: 35 }}>\r\n        <Typography variant=\"body2\" color=\"text.secondary\">{`${Math.round(\r\n          props.value,\r\n        )}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nLinearProgressWithLabel.propTypes = {\r\n  /**\r\n   * The value of the progress indicator for the determinate and buffer variants.\r\n   * Value between 0 and 100.\r\n   */\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default function LinearWithValueLabel(data) {\r\n  const [progress, setProgress] = React.useState(10);\r\n  console.log(start);\r\n  console.log(end);\r\n  console.log(now);\r\n  const start = data.value.start;\r\n  const end = data.value.end;\r\n  const now = data.value.now;\r\n  const test = '1654199136';\r\n  const progress1 = ((test - start) / (end - start)) * 100;\r\n  console.log(progress1)\r\n  console.log(now);\r\n  React.useEffect(() => {\r\n    //set progress bar with the value of now beeing start the 100% and end the 0%\r\n    setProgress(progress1);\r\n  }, [progress1]);\r\n\r\n\r\n  return (\r\n    <Box sx={{ width: '100%' }}>\r\n      <LinearProgressWithLabel value={progress} />\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}