{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\snmed\\\\Desktop\\\\guuru\\\\guuru2\\\\Guuru_main\\\\frontend\\\\src\\\\components\\\\pages\\\\Private\\\\EditVaultData.jsx\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport Axios from 'axios';\nimport { Grid, Input, Button } from '@mui/material';\nimport { useParams, Link } from 'react-router-dom';\nimport { VaultContext } from \"../../../context/vaultContext\";\n\nconst EditVaultData = () => {\n  var _vault$vaults;\n\n  const [vault, setVault] = useState('');\n  const [timeTo, setTimeTo] = useState();\n  const {\n    endDate,\n    setEndDate\n  } = useContext(VaultContext);\n  const {\n    id,\n    vaultid\n  } = useParams();\n  const [usdt, setUsdt] = useState(0);\n  const [btc, setBtc] = useState(0);\n  const [eth, setEth] = useState(0);\n  const [ceuro, setCeuro] = useState(0);\n  const [ada, setAda] = useState(0);\n  const [bnb, setBnb] = useState(0);\n  const [cake, setCake] = useState(0);\n  const [land, setLand] = useState(0);\n  const [bsw, setBsw] = useState(0);\n  let coins = [{\n    coin: 'USDT',\n    quantity: usdt\n  }, {\n    coin: 'BTC',\n    quantity: btc\n  }, {\n    coin: 'ETH',\n    quantity: eth\n  }, {\n    coin: 'cEuro',\n    quantity: ceuro\n  }, {\n    coin: 'ADA',\n    quantity: ada\n  }, {\n    coin: 'BNB',\n    quantity: bnb\n  }, {\n    coin: 'CAKE',\n    quantity: cake\n  }, {\n    coin: 'LAND',\n    quantity: land\n  }, {\n    coin: 'BSW',\n    quantity: bsw\n  }];\n\n  const saveCoins = () => {\n    Axios.post(`/users/api/vaults/${id}/${vaultid}`, {\n      coins\n    }).then(res => {\n      console.log(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleChange = (newQuantity, index) => {\n    console.log(index, newQuantity);\n\n    switch (index) {\n      case 0:\n        setUsdt(newQuantity);\n        break;\n\n      case 1:\n        setBtc(newQuantity);\n        break;\n\n      case 2:\n        setEth(newQuantity);\n        break;\n\n      case 3:\n        setCeuro(newQuantity);\n        break;\n\n      case 4:\n        setAda(newQuantity);\n        break;\n\n      case 5:\n        setBnb(newQuantity);\n        break;\n\n      case 6:\n        setCake(newQuantity);\n        break;\n\n      case 7:\n        setLand(newQuantity);\n        break;\n\n      case 8:\n        setBsw(newQuantity);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  async function traerVault() {\n    await Axios.get(`/users/api/vaults/${id}/${vaultid}`).then(res => {\n      setVault(res.data);\n      res.data.vaults.map(vault => {\n        if (vault._id === vaultid) {\n          console.log(vault);\n          console.log(vault.timelock);\n          setTimeTo(vault.timelock);\n          vault.coins.map((vault, index) => {\n            switch (index) {\n              case 0:\n                setUsdt(vault.quantity);\n                break;\n\n              case 1:\n                setBtc(vault.quantity);\n                break;\n\n              case 2:\n                setEth(vault.quantity);\n                break;\n\n              case 3:\n                setCeuro(vault.quantity);\n                break;\n\n              case 4:\n                setAda(vault.quantity);\n                break;\n\n              case 5:\n                setBnb(vault.quantity);\n                break;\n\n              case 6:\n                setCake(vault.quantity);\n                break;\n\n              case 7:\n                setLand(vault.quantity);\n                break;\n\n              case 8:\n                setBsw(vault.quantity);\n                break;\n\n              default:\n                break;\n            }\n          });\n        }\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function toTimestamp(strDate) {\n    var datum = Date.parse(strDate);\n    return datum / 1000;\n  }\n\n  function setEndDays() {\n    var today = new Date();\n    var priorDate = new Date(new Date().setDate(today.getDate() + timeTo));\n    setEndDate(toTimestamp(priorDate));\n  }\n\n  useEffect(() => {\n    traerVault();\n  }, []);\n  useEffect(() => {\n    setEndDays();\n  }, [timeTo]);\n\n  async function activateVault(vault) {\n    await Axios.post(`/users/api/activate/${id}/${vault}`, {\n      userId: id,\n      vaultId: vault,\n      endDate: endDate\n    }).then(res => {\n      console.log(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  console.log(endDate);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, (_vault$vaults = vault.vaults) === null || _vault$vaults === void 0 ? void 0 : _vault$vaults.map(vault => {\n    var _vault$coins;\n\n    return vault._id === vaultid ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n      className: \"d-flex flex-column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 29\n      }\n    }, \"Vault ID : \", vault._id), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 29\n      }\n    }, \"Activada: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      defaultValue: vault.activated,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 29\n      }\n    }, \"Auto Renovar: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      defaultValue: vault.autoRenew,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 29\n      }\n    }, \"Valor: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      defaultValue: vault.funds,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 29\n      }\n    }, \"Valor: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      defaultValue: vault.funds,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 29\n      }\n    }, \"Stable: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      defaultValue: vault.stable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 29\n      }\n    }, \"Timelock: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      defaultValue: vault.timelock,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 29\n      }\n    }, \"Creada el: \"), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 29\n      }\n    }, vault.createdAt), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 29\n      }\n    }, \"Ultima Modificacion: \"), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 29\n      }\n    }, vault.updatedAt), !vault.activated ? /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      onClick: () => activateVault(vault._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 51\n      }\n    }, \"activar\") : null, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 29\n      }\n    }, \"Coins: \"), /*#__PURE__*/React.createElement(Grid, {\n      className: \"d-flex  flex-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 29\n      }\n    }, (_vault$coins = vault.coins) === null || _vault$coins === void 0 ? void 0 : _vault$coins.map((coin, index) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 4,\n      className: \"d-flex flex-column align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 37\n      }\n    }, coin.coin), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      key: index,\n      defaultValue: coin.quantity,\n      className: \"w-50\",\n      onChange: e => handleChange(e.target.value, index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 37\n      }\n    })))))), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: saveCoins,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 29\n      }\n    }, \"GUARDAR Monedas\")) : null;\n  })));\n};\n\nexport default EditVaultData;","map":{"version":3,"sources":["C:/Users/snmed/Desktop/guuru/guuru2/Guuru_main/frontend/src/components/pages/Private/EditVaultData.jsx"],"names":["React","useState","useEffect","useContext","Axios","Grid","Input","Button","useParams","Link","VaultContext","EditVaultData","vault","setVault","timeTo","setTimeTo","endDate","setEndDate","id","vaultid","usdt","setUsdt","btc","setBtc","eth","setEth","ceuro","setCeuro","ada","setAda","bnb","setBnb","cake","setCake","land","setLand","bsw","setBsw","coins","coin","quantity","saveCoins","post","then","res","console","log","catch","err","handleChange","newQuantity","index","traerVault","get","data","vaults","map","_id","timelock","toTimestamp","strDate","datum","Date","parse","setEndDays","today","priorDate","setDate","getDate","activateVault","userId","vaultId","activated","autoRenew","funds","stable","createdAt","updatedAt","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\r\nimport Axios from 'axios';\r\nimport {Grid, Input, Button } from '@mui/material';\r\nimport { useParams, Link } from 'react-router-dom'\r\nimport { VaultContext } from \"../../../context/vaultContext\";\r\n\r\n\r\nconst EditVaultData = () => {\r\n    const [vault, setVault] = useState('');\r\n    const [timeTo, setTimeTo] = useState();\r\n    const { endDate, setEndDate } = useContext(VaultContext);\r\n    const { id, vaultid } = useParams();\r\n    const [usdt, setUsdt ] = useState(0);\r\n    const [btc, setBtc ] = useState(0);\r\n    const [eth, setEth ] = useState(0);\r\n    const [ceuro, setCeuro ] = useState(0);\r\n    const [ada, setAda ] = useState(0);\r\n    const [bnb, setBnb ] = useState(0);\r\n    const [cake, setCake ] = useState(0);\r\n    const [land, setLand ] = useState(0);\r\n    const [bsw, setBsw ] = useState(0);\r\n    let coins = [{coin: 'USDT', quantity: usdt}, {coin: 'BTC', quantity: btc}, {coin: 'ETH', quantity: eth}, {coin: 'cEuro', quantity: ceuro}, {coin: 'ADA', quantity: ada}, {coin: 'BNB', quantity: bnb}, {coin: 'CAKE', quantity: cake}, {coin: 'LAND', quantity: land}, {coin: 'BSW', quantity: bsw}];\r\n\r\n    const saveCoins = () => {\r\n        Axios.post(`/users/api/vaults/${id}/${vaultid}`, {\r\n            coins\r\n        })\r\n        .then(res => {\r\n            console.log(res);\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    const handleChange = (newQuantity, index) => {\r\n        console.log(index, newQuantity);\r\n        switch(index){\r\n            case 0:\r\n                setUsdt(newQuantity);\r\n                break;\r\n            case 1:\r\n                setBtc(newQuantity);\r\n                break;\r\n            case 2:\r\n                setEth(newQuantity);\r\n                break;\r\n            case 3:\r\n                setCeuro(newQuantity);\r\n                break;\r\n            case 4:\r\n                setAda(newQuantity);\r\n                break;\r\n            case 5:\r\n                setBnb(newQuantity);\r\n                break;\r\n            case 6:\r\n                setCake(newQuantity);\r\n                break;\r\n            case 7:\r\n                setLand(newQuantity);\r\n                break;\r\n            case 8:\r\n                setBsw(newQuantity);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    async function traerVault() {\r\n        await Axios.get(`/users/api/vaults/${id}/${vaultid}`)\r\n            .then(res => {\r\n                setVault(res.data)\r\n               \r\n                res.data.vaults.map(vault => {\r\n                    if(vault._id === vaultid){\r\n                        console.log(vault)\r\n                        console.log(vault.timelock)\r\n                        setTimeTo(vault.timelock)\r\n                        vault.coins.map((vault, index) => {\r\n                            switch(index){\r\n                                case 0:\r\n                                    setUsdt(vault.quantity);\r\n                                    break;\r\n                                case 1:\r\n                                    setBtc(vault.quantity);\r\n                                    break;\r\n                                case 2:\r\n                                    setEth(vault.quantity);\r\n                                    break;\r\n                                case 3:\r\n                                    setCeuro(vault.quantity);\r\n                                    break;\r\n                                case 4:\r\n                                    setAda(vault.quantity);\r\n                                    break;\r\n                                case 5:\r\n                                    setBnb(vault.quantity);\r\n                                    break;\r\n                                case 6:\r\n                                    setCake(vault.quantity);\r\n                                    break;\r\n                                case 7:\r\n                                    setLand(vault.quantity);\r\n                                    break;\r\n                                case 8:\r\n                                    setBsw(vault.quantity);\r\n                                    break;\r\n                                default:\r\n                                    break;\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n\r\n\r\n    function toTimestamp(strDate){\r\n        var datum = Date.parse(strDate);\r\n        return datum/1000;\r\n     }\r\n\r\n     function setEndDays(){\r\n        var today = new Date();\r\n        var priorDate = new Date(new Date().setDate(today.getDate() + timeTo));\r\n        \r\n        \r\n        setEndDate(toTimestamp(priorDate));\r\n     }\r\n\r\n\r\n    useEffect(() => {\r\n        traerVault();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setEndDays();\r\n    }, [timeTo]); \r\n\r\n    async function activateVault(vault) {\r\n        await Axios.post(`/users/api/activate/${id}/${vault}`, {\r\n            userId: id,\r\n            vaultId: vault,\r\n            endDate: endDate\r\n          })\r\n            .then(res => {\r\n              console.log(res)\r\n            })\r\n            .catch(err => {\r\n              console.log(err)\r\n            })\r\n            \r\n        }\r\n\r\n        console.log(endDate);\r\n    return (\r\n        <>\r\n            <Grid container >\r\n                {vault.vaults?.map((vault) => (\r\n                    (vault._id === vaultid) ? (\r\n                        <>\r\n                        <Grid className='d-flex flex-column'>\r\n                            <h1>Vault ID : {vault._id}</h1>\r\n                            <label>Activada: </label>\r\n                            <input type=\"text\" defaultValue={vault.activated} />                            \r\n                            <label>Auto Renovar: </label>\r\n                            <input type=\"text\" defaultValue={vault.autoRenew} />                           \r\n                            <label>Valor: </label>\r\n                            <input type=\"text\" defaultValue={vault.funds} />\r\n                            <label>Valor: </label>\r\n                            <input type=\"text\" defaultValue={vault.funds} />\r\n                            <label>Stable: </label>\r\n                            <input type=\"text\" defaultValue={vault.stable} />\r\n                            <label>Timelock: </label>\r\n                            <input type=\"text\" defaultValue={vault.timelock} />\r\n                            <label>Creada el: </label>\r\n                            <label>{vault.createdAt}</label>\r\n                            <label>Ultima Modificacion: </label>\r\n                            <label>{vault.updatedAt}</label>\r\n                            {(!vault.activated) ? <Button variant=\"contained\" onClick={() => activateVault(vault._id)}>activar</Button> : null}\r\n\r\n                            <label>Coins: </label>\r\n                            <Grid className=\"d-flex  flex-wrap\">\r\n                            {vault.coins?.map((coin, index) => (\r\n                                <>\r\n                                <Grid item md={4} className='d-flex flex-column align-items-center'>\r\n                                    <label>{coin.coin}</label>\r\n                                    \r\n                                    \r\n                                    <input type=\"text\" key={index} defaultValue={coin.quantity}  className='w-50' onChange={(e) => handleChange(e.target.value, index)} />\r\n                                    </Grid>\r\n                                </>\r\n                            ))}\r\n                            </Grid>\r\n                        </Grid>\r\n                            \r\n                            <button onClick={saveCoins}>GUARDAR Monedas</button>\r\n                        </>\r\n\r\n                    )\r\n                        : null\r\n                ))}\r\n\r\n\r\n            </Grid>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditVaultData"]},"metadata":{},"sourceType":"module"}