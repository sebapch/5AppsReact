{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\snmed\\\\Desktop\\\\guuru\\\\guuru2\\\\Guuru_main\\\\frontend\\\\src\\\\components\\\\pages\\\\Vaults\\\\VaultsSum.jsx\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport UserContext from \"../../../context/userContext\";\n\nconst VaultsSum = () => {\n  var _userData$user;\n\n  const [cryptos, setCryptos] = useState([]);\n  const {\n    userData,\n    setUserData\n  } = useContext(UserContext);\n  const [sumVaults, setSumVaults] = useState(0);\n  const [loading, setLoading] = useState(false);\n  let total = 0;\n  const uservaults = (_userData$user = userData.user) === null || _userData$user === void 0 ? void 0 : _userData$user.vaults;\n\n  async function getSumOfFundsInUSD() {\n    setLoading(true);\n    await axios.get(\"https://min-api.cryptocompare.com/data/pricemulti?fsyms=BTC,ETH,ADA,BNB,Cake,LAND,BSW,&tsyms=USD\").then(res => {\n      const cryptos = res.data;\n      setCryptos(cryptos);\n      setLoading(false);\n    });\n  }\n\n  ;\n  useEffect(() => {\n    getSumOfFundsInUSD();\n    getSumOffFunds();\n  }, [uservaults, sumVaults]);\n\n  const getSumOffFunds = () => {\n    setLoading(true);\n    let totalF = 0;\n\n    if (uservaults) {\n      uservaults.map(vault => {\n        console.log(vault.funds);\n        vault.coins.map(coin => {\n          if (coin.coin !== 'USDT' && coin.coin !== 'cEuro') {\n            var _cryptos$coin$coin, _cryptos$coin$coin2;\n\n            console.log((_cryptos$coin$coin = cryptos[coin.coin]) === null || _cryptos$coin$coin === void 0 ? void 0 : _cryptos$coin$coin.USD);\n            console.log(coin.quantity);\n            console.log(total);\n            totalF += ((_cryptos$coin$coin2 = cryptos[coin.coin]) === null || _cryptos$coin$coin2 === void 0 ? void 0 : _cryptos$coin$coin2.USD) * coin.quantity;\n            setSumVaults(totalF);\n            setLoading(false);\n          } else {\n            totalF += coin.quantity;\n            setSumVaults(totalF);\n            setLoading(false);\n          }\n        });\n      });\n    }\n  };\n\n  console.log(cryptos);\n  console.log(userData);\n  console.log(sumVaults);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, !sumVaults ? 'cargando' : /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 32\n    }\n  }, sumVaults.toFixed(2)));\n};\n\nexport default VaultsSum;","map":{"version":3,"sources":["C:/Users/snmed/Desktop/guuru/guuru2/Guuru_main/frontend/src/components/pages/Vaults/VaultsSum.jsx"],"names":["React","useState","useEffect","useContext","axios","UserContext","VaultsSum","cryptos","setCryptos","userData","setUserData","sumVaults","setSumVaults","loading","setLoading","total","uservaults","user","vaults","getSumOfFundsInUSD","get","then","res","data","getSumOffFunds","totalF","map","vault","console","log","funds","coins","coin","USD","quantity","toFixed"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport UserContext from \"../../../context/userContext\";\r\n\r\nconst VaultsSum = () => {\r\n  const [cryptos, setCryptos] = useState([]);\r\n  const { userData, setUserData } = useContext(UserContext);\r\n  const [sumVaults, setSumVaults] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n    let total = 0;\r\n    const uservaults = userData.user?.vaults\r\n\r\n\r\n  async function getSumOfFundsInUSD() {\r\n    setLoading(true);\r\n    await axios\r\n      .get(\r\n        \"https://min-api.cryptocompare.com/data/pricemulti?fsyms=BTC,ETH,ADA,BNB,Cake,LAND,BSW,&tsyms=USD\"\r\n      )\r\n      .then((res) => {\r\n        const cryptos = res.data;\r\n        setCryptos(cryptos);\r\n        setLoading(false);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    getSumOfFundsInUSD();\r\n    getSumOffFunds();\r\n  }, [uservaults, sumVaults]);\r\n\r\n  const getSumOffFunds = () => {\r\n    setLoading(true);\r\n    let totalF = 0;\r\n    if (uservaults) {\r\n      uservaults.map(vault => {\r\n        console.log(vault.funds)\r\n        vault.coins.map(coin => {\r\n          \r\n          if (coin.coin !== 'USDT' && coin.coin !== 'cEuro') {\r\n            console.log(cryptos[coin.coin]?.USD)\r\n            console.log(coin.quantity)\r\n            console.log(total)\r\n            totalF +=  cryptos[coin.coin]?.USD * coin.quantity\r\n            setSumVaults(totalF);\r\n            setLoading(false);\r\n          }\r\n          else {\r\n            totalF += coin.quantity\r\n            setSumVaults(totalF);\r\n            setLoading(false);\r\n          }\r\n        })\r\n      }\r\n      )\r\n  }}\r\n\r\n\r\n\r\n  console.log(cryptos);\r\n  console.log(userData);\r\n  console.log(sumVaults);\r\n  return (\r\n    <>\r\n    {!sumVaults ? 'cargando' : <h1>{sumVaults.toFixed(2)}</h1>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VaultsSum;\r\n"]},"metadata":{},"sourceType":"module"}