{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Natalio-PC\\\\Desktop\\\\guuru\\\\Guuru_main\\\\frontend\\\\src\\\\context\\\\vaultContext.js\";\nimport React, { createContext, useContext, useState } from 'react';\nimport axios from 'axios';\nimport userContext from './userContext';\nexport const VaultContext = createContext();\nexport const VaultProvider = ({\n  children\n}) => {\n  const [vault, setVault] = useState('');\n  const [stable, setStable] = useState('');\n  const [timelock, setTimelock] = useState('');\n  const [autoRenew, setAutoRenew] = useState(true);\n  const [funds, setFunds] = useState(0);\n  const [activated, setActivated] = useState(false);\n  const {\n    userData\n  } = useContext(userContext);\n  const [coins, setCoins] = useState([]);\n\n  const saveVaults = async () => {\n    var _userData$user;\n\n    if (vault === 0) {\n      setCoins([{\n        coin: 'USDT',\n        quantity: 0\n      }, {\n        coin: 'cEURO',\n        quantity: 0\n      }]);\n    } else if (vault === 1) {\n      setCoins([{\n        coin: 'BTC',\n        quantity: 0\n      }, {\n        coin: 'ETH',\n        quantity: 0\n      }, {\n        coin: 'ADA',\n        quantity: 0\n      }, {\n        coin: 'BNB',\n        quantity: 0\n      }]);\n    } else if (vault === 2) {\n      setCoins([{\n        coin: 'CAKE',\n        quantity: 0\n      }, {\n        coin: 'LAND',\n        quantity: 0\n      }, {\n        coin: 'BSW',\n        quantity: 0\n      }, {\n        coin: 'BNB',\n        quantity: 0\n      }]);\n    }\n\n    await axios.post('/users/api/vaults', {\n      vault,\n      stable,\n      timelock,\n      autoRenew,\n      funds,\n      activated,\n      coins: [coins],\n      userId: ((_userData$user = userData.user) === null || _userData$user === void 0 ? void 0 : _userData$user._id) || userData\n    }).then(res => {\n      console.log(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(VaultContext.Provider, {\n    value: {\n      vault,\n      setVault,\n      stable,\n      setStable,\n      timelock,\n      setTimelock,\n      autoRenew,\n      setAutoRenew,\n      funds,\n      setFunds,\n      saveVaults\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"sources":["C:/Users/Natalio-PC/Desktop/guuru/Guuru_main/frontend/src/context/vaultContext.js"],"names":["React","createContext","useContext","useState","axios","userContext","VaultContext","VaultProvider","children","vault","setVault","stable","setStable","timelock","setTimelock","autoRenew","setAutoRenew","funds","setFunds","activated","setActivated","userData","coins","setCoins","saveVaults","coin","quantity","post","userId","user","_id","then","res","console","log","catch","err"],"mappings":"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","sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\nimport axios from 'axios';\r\nimport userContext from './userContext';\r\nexport const VaultContext = createContext();\r\n\r\n\r\n\r\nexport const VaultProvider = ({ children }) => {\r\n\r\n  const [vault, setVault] = useState('')\r\n  const [stable, setStable] = useState('')\r\n  const [timelock, setTimelock] = useState('')\r\n  const [autoRenew, setAutoRenew] = useState(true)\r\n  const [funds, setFunds] = useState(0)\r\n  const [activated, setActivated] = useState(false)\r\n  const {userData} = useContext(userContext)\r\n  const [coins, setCoins] = useState([])\r\n\r\n  \r\n  const saveVaults = async() => {\r\n    if(vault === 0 ){\r\n      setCoins([\r\n        {\r\n          coin: 'USDT',\r\n          quantity: 0\r\n        },\r\n        {\r\n          coin: 'cEURO',\r\n          quantity: 0\r\n        },\r\n      ])\r\n    } else if (vault === 1 ){\r\n      setCoins([\r\n        {\r\n          coin: 'BTC',\r\n          quantity: 0\r\n        },\r\n        {\r\n          coin: 'ETH',\r\n          quantity: 0\r\n        },\r\n        {\r\n          coin: 'ADA',\r\n          quantity: 0\r\n        },\r\n        {\r\n          coin: 'BNB',\r\n          quantity: 0\r\n        }\r\n      ])\r\n    } else if (vault === 2 ){\r\n      setCoins([\r\n        {\r\n          coin: 'CAKE',\r\n          quantity: 0\r\n        },\r\n        {\r\n          coin: 'LAND',\r\n          quantity: 0\r\n        },\r\n        {\r\n          coin: 'BSW',\r\n          quantity: 0\r\n        },\r\n        {\r\n          coin: 'BNB',\r\n          quantity: 0\r\n        },\r\n      ])\r\n    }\r\n\r\n    await axios.post('/users/api/vaults', {\r\n      vault,\r\n      stable,\r\n      timelock,\r\n      autoRenew,\r\n      funds,\r\n      activated,\r\n      coins: [coins],\r\n      userId : userData.user?._id || userData\r\n    })\r\n      .then(res => {\r\n        console.log(res)\r\n      }\r\n      ).catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <VaultContext.Provider value={{\r\n      vault, setVault, stable, setStable,\r\n      timelock, setTimelock, autoRenew, setAutoRenew,\r\n      funds, setFunds, saveVaults\r\n    }}>\r\n      {children}\r\n    </VaultContext.Provider>\r\n  )\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}