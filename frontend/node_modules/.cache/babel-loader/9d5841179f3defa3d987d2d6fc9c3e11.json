{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\snmed\\\\Desktop\\\\guuru\\\\guuru2\\\\Guuru_main\\\\frontend\\\\src\\\\components\\\\pages\\\\Vaults\\\\VaultsSum.jsx\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport UserContext from \"../../../context/userContext\";\n\nconst VaultsSum = () => {\n  var _userData$user;\n\n  const [cryptos, setCryptos] = useState([]);\n  const {\n    userData,\n    setUserData\n  } = useContext(UserContext);\n  const [sumVaults, setSumVaults] = useState(0);\n\n  const getSumOfFundsInUSD = () => {\n    axios.get(\"https://min-api.cryptocompare.com/data/pricemulti?fsyms=BTC,ETH,ADA,BNB,Cake,LAND,BSW,&tsyms=USD\").then(res => {\n      const cryptos = res.data;\n      setCryptos(cryptos);\n    });\n  };\n\n  useEffect(() => {\n    getSumOfFundsInUSD();\n  }, []);\n  console.log(cryptos);\n  console.log(userData);\n  console.log(sumVaults);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cryptos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, Object.keys(cryptos).map(key => /*#__PURE__*/React.createElement(\"div\", {\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, key), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"\\xA0\", cryptos[key].USD)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vaultsSUM\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, (_userData$user = userData.user) === null || _userData$user === void 0 ? void 0 : _userData$user.vaults.map((vault, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"fondos : \", vault.funds), vault === null || vault === void 0 ? void 0 : vault.coins.map((coin, index) => {\n    var _cryptos$coin$coin;\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, coin.coin), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, \"\\xA0\", coin.quantity), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, coin.coin !== 'USDT' && coin.coin !== 'cEuro' && ((_cryptos$coin$coin = cryptos[coin.coin]) === null || _cryptos$coin$coin === void 0 ? void 0 : _cryptos$coin$coin.USD) * coin.quantity));\n  })))));\n};\n\nexport default VaultsSum;","map":{"version":3,"sources":["C:/Users/snmed/Desktop/guuru/guuru2/Guuru_main/frontend/src/components/pages/Vaults/VaultsSum.jsx"],"names":["React","useState","useEffect","useContext","axios","UserContext","VaultsSum","cryptos","setCryptos","userData","setUserData","sumVaults","setSumVaults","getSumOfFundsInUSD","get","then","res","data","console","log","Object","keys","map","key","USD","user","vaults","vault","index","funds","coins","coin","quantity"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAAEQ,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA4BP,UAAU,CAACE,WAAD,CAA5C;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,CAAD,CAA1C;;AAIA,QAAMY,kBAAkB,GAAG,MAAM;AAC/BT,IAAAA,KAAK,CACFU,GADH,CAEI,kGAFJ,EAIGC,IAJH,CAISC,GAAD,IAAS;AACb,YAAMT,OAAO,GAAGS,GAAG,CAACC,IAApB;AACAT,MAAAA,UAAU,CAACD,OAAD,CAAV;AACD,KAPH;AAQD,GATD;;AAWAL,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,kBAAkB;AACnB,GAFQ,EAEN,EAFM,CAAT;AAMAK,EAAAA,OAAO,CAACC,GAAR,CAAYZ,OAAZ;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAYR,SAAZ;AACA,sBACE,uDACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGS,MAAM,CAACC,IAAP,CAAYd,OAAZ,EAAqBe,GAArB,CAA0BC,GAAD,iBACxB;AAAK,IAAA,GAAG,EAAEA,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,GAAP,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAahB,OAAO,CAACgB,GAAD,CAAP,CAAaC,GAA1B,CAFF,CADD,CADH,CADF,eASE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACGf,QAAQ,CAACgB,IADZ,mDACG,eAAeC,MAAf,CAAsBJ,GAAtB,CAA0B,CAACK,KAAD,EAAQC,KAAR,kBACzB;AAAK,IAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAgBD,KAAK,CAACE,KAAtB,CADF,EAEGF,KAFH,aAEGA,KAFH,uBAEGA,KAAK,CAAEG,KAAP,CAAaR,GAAb,CAAiB,CAACS,IAAD,EAAOH,KAAP;AAAA;;AAAA,wBAChB;AAAK,MAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOG,IAAI,CAACA,IAAZ,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAaA,IAAI,CAACC,QAAlB,CAFF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,IAAI,CAACA,IAAL,KAAc,MAAd,IAAwBA,IAAI,CAACA,IAAL,KAAc,OAAtC,IAAiD,uBAAAxB,OAAO,CAACwB,IAAI,CAACA,IAAN,CAAP,0EAAoBP,GAApB,IAA0BO,IAAI,CAACC,QAArF,CAJF,CADgB;AAAA,GAAjB,CAFH,CADD,CADH,CATF,CADF;AA+BD,CA1DD;;AA4DA,eAAe1B,SAAf","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport UserContext from \"../../../context/userContext\";\r\n\r\nconst VaultsSum = () => {\r\n  const [cryptos, setCryptos] = useState([]);\r\n  const { userData, setUserData } = useContext(UserContext);\r\n  const [sumVaults, setSumVaults] = useState(0);\r\n \r\n\r\n\r\n  const getSumOfFundsInUSD = () => {\r\n    axios\r\n      .get(\r\n        \"https://min-api.cryptocompare.com/data/pricemulti?fsyms=BTC,ETH,ADA,BNB,Cake,LAND,BSW,&tsyms=USD\"\r\n      )\r\n      .then((res) => {\r\n        const cryptos = res.data;\r\n        setCryptos(cryptos);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getSumOfFundsInUSD();\r\n  }, []);\r\n\r\n\r\n\r\n  console.log(cryptos);\r\n  console.log(userData);\r\n  console.log(sumVaults);\r\n  return (\r\n    <>\r\n      <div className=\"cryptos\">\r\n        {Object.keys(cryptos).map((key) => (\r\n          <div key={key}>\r\n            <span>{key}</span>\r\n            <span>&nbsp;{cryptos[key].USD}</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"vaultsSUM\">\r\n        {userData.user?.vaults.map((vault, index) => (\r\n          <div key={index}>\r\n            <span>fondos : {vault.funds}</span>\r\n            {vault?.coins.map((coin, index) => (\r\n              <div key={index}>\r\n                <span>{coin.coin}</span>\r\n                <span>&nbsp;{coin.quantity}</span>\r\n                {/* compare coin.coin with cryptos and check if the same value */}\r\n                <h3>{coin.coin !== 'USDT' && coin.coin !== 'cEuro' && cryptos[coin.coin]?.USD * coin.quantity}</h3>\r\n                \r\n                \r\n                    \r\n                \r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VaultsSum;\r\n"]},"metadata":{},"sourceType":"module"}