{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\snmed\\\\Desktop\\\\guuru\\\\guuru2\\\\Guuru_main\\\\frontend\\\\src\\\\components\\\\pages\\\\VaultInfo\\\\VaultInfo.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Container, Grid, Button, Switch } from \"@mui/material\";\nimport Axios from \"axios\";\n\nconst VaultInfo = () => {\n  var _vault$coins;\n\n  const [vault, setVault] = useState([]);\n  const {\n    userid,\n    vaultid\n  } = useParams();\n  console.log(\"userID: \" + userid + \"vault ID: \" + vaultid);\n\n  function traerVault(vault) {\n    Axios.get(`/users/api/vaults/${userid}/${vaultid}`).then(res => {\n      setVault(res.data);\n      res.data.vaults.map(vault => {\n        console.log(vault);\n\n        if (vault._id === vaultid) {\n          console.log(vaultid);\n          setVault(vault);\n        }\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  useEffect(() => {\n    traerVault();\n  }, []);\n  console.log(vault);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"VAULT INFO \"), /*#__PURE__*/React.createElement(Grid, {\n    className: \"d-flex flex-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, \"Vault ID: \", vault._id), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, \"Fecha de armado: \", vault.createdAt), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, \"Saldo inicial: \", vault.funds), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, \"Saldo actual: INSERTAR SALDO ACTUAL\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, \"Intereses: INSERTAR INTERESES\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, \"Timelock: \", vault.timelock), (_vault$coins = vault.coins) === null || _vault$coins === void 0 ? void 0 : _vault$coins.map((coin, index) => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, \"Coin ID: \", coin.coin), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, \"Monto: \", coin.quantity));\n  }))));\n};\n\nexport default VaultInfo;","map":{"version":3,"sources":["C:/Users/snmed/Desktop/guuru/guuru2/Guuru_main/frontend/src/components/pages/VaultInfo/VaultInfo.jsx"],"names":["React","useState","useEffect","useParams","Container","Grid","Button","Switch","Axios","VaultInfo","vault","setVault","userid","vaultid","console","log","traerVault","get","then","res","data","vaults","map","_id","catch","err","createdAt","funds","timelock","coins","coin","index","quantity"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,MAA1B,EAAkCC,MAAlC,QAAgD,eAAhD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM;AAAEW,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAsBV,SAAS,EAArC;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAaH,MAAb,GAAsB,YAAtB,GAAqCC,OAAjD;;AAIA,WAASG,UAAT,CAAoBN,KAApB,EAA2B;AACzBF,IAAAA,KAAK,CAACS,GAAN,CAAW,qBAAoBL,MAAO,IAAGC,OAAQ,EAAjD,EACGK,IADH,CACSC,GAAD,IAAS;AACbR,MAAAA,QAAQ,CAACQ,GAAG,CAACC,IAAL,CAAR;AACAD,MAAAA,GAAG,CAACC,IAAJ,CAASC,MAAT,CAAgBC,GAAhB,CAAqBZ,KAAD,IAAW;AAC7BI,QAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;;AACA,YAAGA,KAAK,CAACa,GAAN,KAAcV,OAAjB,EAAyB;AACvBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACAF,UAAAA,QAAQ,CAACD,KAAD,CAAR;AACD;AACF,OAND;AAOD,KAVH,EAWGc,KAXH,CAWUC,GAAD,IAAS;AACdX,MAAAA,OAAO,CAACC,GAAR,CAAYU,GAAZ;AACD,KAbH;AAcD;;AACDvB,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;AAIAF,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AAEA,sBACE,uDACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAGE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAkBA,KAAK,CAACa,GAAxB,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAyBb,KAAK,CAACgB,SAA/B,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAuBhB,KAAK,CAACiB,KAA7B,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAkBjB,KAAK,CAACkB,QAAxB,CANF,kBAQGlB,KAAK,CAACmB,KART,iDAQG,aAAaP,GAAb,CAAiB,CAACQ,IAAD,EAAOC,KAAP,KAAiB;AACjC,wBACE,uDAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAiBD,IAAI,CAACA,IAAtB,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAeA,IAAI,CAACE,QAApB,CAHF,CADF;AAQD,GATA,CARH,CAHF,CADF,CADF;AA4BD,CA1DD;;AA4DA,eAAevB,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Container, Grid, Button, Switch } from \"@mui/material\";\r\nimport Axios from \"axios\";\r\n\r\nconst VaultInfo = () => {\r\n  const [vault, setVault] = useState([]);\r\n\r\n  const { userid, vaultid } = useParams();\r\n  console.log(\"userID: \" + userid + \"vault ID: \" + vaultid);\r\n\r\n\r\n\r\n  function traerVault(vault) {\r\n    Axios.get(`/users/api/vaults/${userid}/${vaultid}`)\r\n      .then((res) => {\r\n        setVault(res.data);\r\n        res.data.vaults.map((vault) => {\r\n          console.log(vault)\r\n          if(vault._id === vaultid){\r\n            console.log(vaultid)\r\n            setVault(vault)\r\n          }\r\n        })\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    traerVault();\r\n  }, []);\r\n\r\n  console.log(vault);\r\n\r\n  return (\r\n    <>\r\n      <Container className=\"mb-4\">\r\n        <h1>VAULT INFO </h1>\r\n\r\n        <Grid className=\"d-flex flex-column\">\r\n          <label>Vault ID: {vault._id}</label>\r\n          <label>Fecha de armado: {vault.createdAt}</label>\r\n          <label>Saldo inicial: {vault.funds}</label>\r\n          <label>Saldo actual: INSERTAR SALDO ACTUAL</label>\r\n          <label>Intereses: INSERTAR INTERESES</label>\r\n          <label>Timelock: {vault.timelock}</label>\r\n\r\n          {vault.coins?.map((coin, index) => {\r\n            return (\r\n              <>\r\n\r\n                <label>Coin ID: {coin.coin}</label>\r\n                <label>Monto: {coin.quantity}</label>\r\n                \r\n              </>\r\n            );\r\n          })}\r\n        \r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VaultInfo;\r\n"]},"metadata":{},"sourceType":"module"}