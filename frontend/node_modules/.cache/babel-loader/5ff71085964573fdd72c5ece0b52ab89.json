{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Natalio-PC\\\\Desktop\\\\Guuru\\\\frontend\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport PrivateRoute from './components/auth/PrivateRoute';\nimport PublicRoute from './components/auth/PublicRoute';\nimport axios from 'axios';\nimport Header from './components/layout/Header';\nimport Home from './components/pages/Home';\nimport Register from './components/auth/Register';\nimport Login from './components/auth/Login';\nimport UserContext from './context/userContext';\nimport './App.css';\nimport Early from './components/pages/Early';\nimport Step1 from './components/pages/steps/step1';\n\nfunction App() {\n  const [userData, setUserData] = useState({\n    token: undefined,\n    user: undefined\n  });\n  const [isAuthenticated, setIsAuthenticated] = useState(true);\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      let token = localStorage.getItem(\"auth-token\");\n\n      if (token === null) {\n        localStorage.setItem(\"auth-token\", \"\");\n        token = \"\";\n      }\n\n      const tokenResponse = await axios.post('http://localhost:5000/users/tokenIsValid', null, {\n        headers: {\n          \"x-auth-token\": token\n        }\n      });\n\n      if (tokenResponse.data) {\n        const userRes = await axios.get(\"http://localhost:5000/users/\", {\n          headers: {\n            \"x-auth-token\": token\n          }\n        });\n        setUserData({\n          token,\n          user: userRes.data\n        });\n        setIsAuthenticated(true);\n      }\n    };\n\n    checkLoggedIn();\n  }, []);\n  return /*#__PURE__*/React.createElement(BrowserRouter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(UserContext.Provider, {\n    value: {\n      userData,\n      setUserData\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: Home,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/register\",\n    component: Register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/login\",\n    component: Login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(PrivateRoute, {\n    path: \"/early\",\n    isAuthenticated: isAuthenticated,\n    component: Early,\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/step1\",\n    component: Step1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Natalio-PC/Desktop/Guuru/frontend/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Switch","Route","PrivateRoute","PublicRoute","axios","Header","Home","Register","Login","UserContext","Early","Step1","App","userData","setUserData","token","undefined","user","isAuthenticated","setIsAuthenticated","checkLoggedIn","localStorage","getItem","setItem","tokenResponse","post","headers","data","userRes","get"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,QAA6C,kBAA7C;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,KAAP,MAAkB,gCAAlB;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAAEC,QAAF,EAAYC,WAAZ,IAA2BjB,QAAQ,CAAC;AACxCkB,IAAAA,KAAK,EAAEC,SADiC;AAExCC,IAAAA,IAAI,EAAED;AAFkC,GAAD,CAAzC;AAIA,QAAM,CAACE,eAAD,EAAkBC,kBAAlB,IAAwCtB,QAAQ,CAAC,IAAD,CAAtD;AAIAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMsB,aAAa,GAAG,YAAY;AAChC,UAAIL,KAAK,GAAGM,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAZ;;AACA,UAAGP,KAAK,KAAK,IAAb,EAAkB;AAChBM,QAAAA,YAAY,CAACE,OAAb,CAAqB,YAArB,EAAmC,EAAnC;AACAR,QAAAA,KAAK,GAAG,EAAR;AACD;;AACD,YAAMS,aAAa,GAAG,MAAMpB,KAAK,CAACqB,IAAN,CAAW,0CAAX,EAAuD,IAAvD,EAA6D;AAACC,QAAAA,OAAO,EAAE;AAAC,0BAAgBX;AAAjB;AAAV,OAA7D,CAA5B;;AACA,UAAIS,aAAa,CAACG,IAAlB,EAAwB;AACtB,cAAMC,OAAO,GAAG,MAAMxB,KAAK,CAACyB,GAAN,CAAU,8BAAV,EAA0C;AAC9DH,UAAAA,OAAO,EAAE;AAAE,4BAAgBX;AAAlB;AADqD,SAA1C,CAAtB;AAGAD,QAAAA,WAAW,CAAC;AACVC,UAAAA,KADU;AAEVE,UAAAA,IAAI,EAAEW,OAAO,CAACD;AAFJ,SAAD,CAAX;AAIAR,QAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD;AACF,KAjBD;;AAmBAC,IAAAA,aAAa;AACd,GArBQ,EAqBN,EArBM,CAAT;AAuBA,sBAGE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEP,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,SAAS,EAAER,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,WAAZ;AAAwB,IAAA,SAAS,EAAEC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,SAAS,EAAEC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE,oBAAC,YAAD;AACK,IAAA,IAAI,EAAC,QADV;AAEK,IAAA,eAAe,EAAEU,eAFtB;AAGK,IAAA,SAAS,EAAER,KAHhB;AAIK,IAAA,KAAK,EAAE,IAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAUE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,SAAS,EAAEC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CAFF,CADF,CAHF;AAsBD;;AAED,eAAeC,GAAf","sourcesContent":["import React, {useState, useEffect } from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport PrivateRoute from './components/auth/PrivateRoute';\r\nimport PublicRoute from './components/auth/PublicRoute';\r\nimport axios from 'axios';\r\nimport Header from './components/layout/Header';\r\nimport Home from './components/pages/Home';\r\nimport Register from './components/auth/Register';\r\nimport Login from './components/auth/Login';\r\nimport UserContext from './context/userContext';\r\nimport './App.css';\r\nimport Early from './components/pages/Early';\r\nimport Step1 from './components/pages/steps/step1';\r\n\r\nfunction App() {\r\n  const [ userData, setUserData] = useState({\r\n    token: undefined,\r\n    user: undefined\r\n  });\r\n  const [isAuthenticated, setIsAuthenticated] = useState(true);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const checkLoggedIn = async () => {\r\n      let token = localStorage.getItem(\"auth-token\");\r\n      if(token === null){\r\n        localStorage.setItem(\"auth-token\", \"\");\r\n        token = \"\";\r\n      }\r\n      const tokenResponse = await axios.post('http://localhost:5000/users/tokenIsValid', null, {headers: {\"x-auth-token\": token}});\r\n      if (tokenResponse.data) {\r\n        const userRes = await axios.get(\"http://localhost:5000/users/\", {\r\n          headers: { \"x-auth-token\": token },\r\n        });\r\n        setUserData({\r\n          token,\r\n          user: userRes.data,\r\n        });\r\n        setIsAuthenticated(true);\r\n      }\r\n    }\r\n\r\n    checkLoggedIn();\r\n  }, []);\r\n\r\n  return (\r\n\r\n\r\n    <BrowserRouter>\r\n      <UserContext.Provider value={{ userData, setUserData }}>\r\n         {/* <Header />  */}\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route path=\"/register\" component={Register} />\r\n          <Route path=\"/login\" component={Login} />\r\n          <PrivateRoute\r\n               path=\"/early\"\r\n               isAuthenticated={isAuthenticated}\r\n               component={Early}\r\n               exact={true}\r\n            />\r\n          <Route path=\"/step1\" component={Step1} />\r\n\r\n        </Switch>\r\n        </UserContext.Provider>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}